source,app,title,description,datamodel,"providing_technologies","security_domain",category,"use_case",mitre,killchain,"detection_searches","investigative_searches","contextual_searches","support_searches",qualifiedSearch
"ESCU Searches","DA-ESS-ContentUpdate","AWS Cloud Provisioning From Previously Unseen City","This search looks for AWS provisioning activities from previously unseen cities.  Provisioning activities are defined broadly as any event that begins with ""Run"" or ""Create.""",,,endpoint,,,,,,,,,"search sourcetype=aws:cloudtrail (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search City=* [search sourcetype=aws:cloudtrail (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search City=* | stats earliest(_time) as firstTime, latest(_time) as lastTime by sourceIPAddress, City, Region, Country | inputlookup append=t previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by sourceIPAddress, City, Region, Country | outputlookup previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by City | eval newCity=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newCity=1 | table City] | spath output=user userIdentity.arn | rename sourceIPAddress as src_ip | table _time, user, src_ip, City, eventName, errorCode"
"ESCU Searches","DA-ESS-ContentUpdate","AWS Cloud Provisioning From Previously Unseen Country","This search looks for AWS provisioning activities from previously unseen countries. Provisioning activities are defined broadly as any event that begins with ""Run"" or ""Create.""",,,endpoint,,,,,,,,,"search sourcetype=aws:cloudtrail (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Country=* [search sourcetype=aws:cloudtrail (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Country=* | stats earliest(_time) as firstTime, latest(_time) as lastTime by sourceIPAddress, City, Region, Country | inputlookup append=t previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by sourceIPAddress, City, Region, Country | outputlookup previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by Country | eval newCountry=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newCountry=1 | table Country] | spath output=user userIdentity.arn | rename sourceIPAddress as src_ip | table _time, user, src_ip, Country, eventName, errorCode"
"ESCU Searches","DA-ESS-ContentUpdate","AWS Cloud Provisioning From Previously Unseen IP Address","This search looks for AWS provisioning activities from previously unseen IP addresses. Provisioning activities are defined broadly as any event that begins with ""Run"" or ""Create.""",,,endpoint,,,,,,,,,"search sourcetype=aws:cloudtrail (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Country=* [search sourcetype=aws:cloudtrail (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Country=* | stats earliest(_time) as firstTime, latest(_time) as lastTime by sourceIPAddress, City, Region, Country | inputlookup append=t previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by sourceIPAddress, City, Region, Country | outputlookup previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by sourceIPAddress | eval newIP=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newIP=1 | table sourceIPAddress] | spath output=user userIdentity.arn | rename sourceIPAddress as src_ip | table _time, user, src_ip, eventName, errorCode"
"ESCU Searches","DA-ESS-ContentUpdate","AWS Cloud Provisioning From Previously Unseen Region","This search looks for AWS provisioning activities from previously unseen regions. Region in this context is similar to a state in the United States. Provisioning activities are defined broadly as any event that begins with ""Run"" or ""Create.""",,,endpoint,,,,,,,,,"search sourcetype=aws:cloudtrail (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Region=* [search sourcetype=aws:cloudtrail (eventName=Run* OR eventName=Create*) | iplocation sourceIPAddress | search Region=* | stats earliest(_time) as firstTime, latest(_time) as lastTime by sourceIPAddress, City, Region, Country | inputlookup append=t previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by sourceIPAddress, City, Region, Country | outputlookup previously_seen_provisioning_activity_src.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by Region | eval newRegion=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newRegion=1 | table Region] | spath output=user userIdentity.arn | rename sourceIPAddress as src_ip | table _time, user, src_ip, Region, eventName, errorCode"
"ESCU Searches","DA-ESS-ContentUpdate","AWS Cross Account Activity From Previously Unseen Account","This search looks for AssumeRole events where an IAM role in a different account is requested for the first time.",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail eventName=AssumeRole | spath output=requestingAccountId path=userIdentity.accountId | spath output=requestedAccountId path=resources{}.accountId | search requestingAccountId=* | where requestingAccountId != requestedAccountId | inputlookup append=t previously_seen_aws_cross_account_activity | multireport [| stats min(eval(coalesce(firstTime, strptime(_time,""%Y-%m-%d %H:%M:%S"")))) as firstTime max(eval(coalesce(strptime(_time,""%Y-%m-%d %H:%M:%S""), lastTime))) as lastTime by requestingAccountId, requestedAccountId | outputlookup previously_seen_aws_cross_account_activity | where fact=fiction] [| eventstats min(eval(coalesce(firstTime, strptime(_time,""%Y-%m-%d %H:%M:%S"")))) as firstTime, max(eval(coalesce(strptime(_time,""%Y-%m-%d %H:%M:%S""), lastTime))) as lastTime by requestingAccountId, requestedAccountId | where firstTime >= relative_time(now(), ""-70m@m"") AND isnotnull(_time) | spath output=accessKeyId path=responseElements.credentials.accessKeyId | spath output=requestingARN path=resources{}.ARN | stats values(awsRegion) as awsRegion values(firstTime) as firstTime values(lastTime) as lastTime values(sharedEventID) as sharedEventID, values(requestingARN) as src_user, values(responseElements.assumedRoleUser.arn) as dest_user by _time, requestingAccountId, requestedAccountId, accessKeyId] | table _time, firstTime, lastTime, src_user, requestingAccountId, dest_user, requestedAccountId, awsRegion, accessKeyId, sharedEventID"
"ESCU Searches","DA-ESS-ContentUpdate","AWS Network Access Control List Created with All Open Ports","The search looks for CloudTrail events to detect if any network ACLs were created with all the ports open to a specified CIDR.",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail eventName=CreateNetworkAclEntry | mvexpand requestParameters | mvexpand responseElements | search requestParameters.portRange.from=1024 requestParameters.portRange.to=65535 requestParameters.ruleAction=allow | rename userIdentity.arn as arn | rename requestParameters.networkAclId as networkAclId | table _time aws_account_id src userName arn networkAclId requestParameters.* responseElements.*"
"ESCU Searches","DA-ESS-ContentUpdate","AWS Network Access Control List Deleted","Enforcing network-access controls is one of the defensive mechanisms used by cloud administrators to restrict access to a cloud instance. After the attacker has gained control of the AWS console by compromising an admin account they can delete a network ACL and gain access to the instance from anywhere. This search will query the CloudTrail logs to detect users deleting network ACLs.",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail eventName=DeleteNetworkAcl|rename userIdentity.arn as arn  | stats count min(_time) as firstTime max(_time) as lastTime values(errorMessage) values(errorCode) values(userAgent) values(userIdentity.*) by src userName arn eventName | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Abnormally High AWS Instances Launched by User","This search looks for CloudTrail events where a user successfully launches an abnormally high number of instances.",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail eventName=RunInstances errorCode=success | bucket span=10m _time | stats count AS instances_launched by _time userName | eventstats avg(instances_launched) as total_launched_avg, stdev(instances_launched) as total_launched_stdev | eval threshold_value = 4 | eval isOutlier=if(instances_launched > total_launched_avg+(total_launched_stdev * threshold_value), 1, 0) | search isOutlier=1 AND _time >= relative_time(now(), ""-10m@m"") | eval num_standard_deviations_away = round(abs(instances_launched - total_launched_avg) / total_launched_stdev, 2) | table _time, userName, instances_launched, num_standard_deviations_away, total_launched_avg, total_launched_stdev"
"ESCU Searches","DA-ESS-ContentUpdate","Abnormally High AWS Instances Launched by User - MLTK","This search looks for CloudTrail events where a user successfully launches an abnormally high number of instances.",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail eventName=RunInstances errorCode=success `ec2_excessive_runinstances_mltk_input_filter` | bucket span=10m _time  | stats count as instances_launched by _time src_user  | apply ec2_excessive_runinstances_v1  | rename ""IsOutlier(instances_launched)"" as isOutlier  | where isOutlier=1"
"ESCU Searches","DA-ESS-ContentUpdate","Abnormally High AWS Instances Terminated by User","This search looks for CloudTrail events where an abnormally high number of instances were successfully terminated by a user in a 10-minute window",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail eventName=TerminateInstances errorCode=success | bucket span=10m _time | stats count AS instances_terminated by _time userName | eventstats avg(instances_terminated) as total_terminations_avg, stdev(instances_terminated) as total_terminations_stdev | eval threshold_value = 4 | eval isOutlier=if(instances_terminated > total_terminations_avg+(total_terminations_stdev * threshold_value), 1, 0) | search isOutlier=1 AND _time >= relative_time(now(), ""-10m@m"")| eval num_standard_deviations_away = round(abs(instances_terminated - total_terminations_avg) / total_terminations_stdev, 2) |table _time, userName, instances_terminated, num_standard_deviations_away, total_terminations_avg, total_terminations_stdev"
"ESCU Searches","DA-ESS-ContentUpdate","Abnormally High AWS Instances Terminated by User - MLTK","This search looks for CloudTrail events where a user successfully terminates an abnormally high number of instances.",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail eventName=TerminateInstances errorCode=success `ec2_excessive_terminateinstances_mltk_input_filter` | bucket span=10m _time  | stats count as instances_terminated by _time src_user  | apply ec2_excessive_terminateinstances_v1  | rename ""IsOutlier(instances_terminated)"" as isOutlier  | where isOutlier=1"
"ESCU Searches","DA-ESS-ContentUpdate","Access LSASS Memory for Dump Creation","Detect memory dumping of the LSASS process.",,,endpoint,,,,,,,,,"search `sysmon` EventCode=10 TargetImage=*lsass.exe CallTrace=*dbgcore.dll* OR CallTrace=*dbghelp.dll* | stats count min(_time) as firstTime max(_time) as lastTime by Computer, TargetImage, TargetProcessId, SourceImage, SourceProcessId | rename Computer as dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `access_lsass_memory_for_dump_creation_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Amazon EKS Kubernetes Pod scan detection","This search provides detection information on unauthenticated requests against Kubernetes' Pods API",,,threat,,,,,,,,,"search sourcetype=""aws:cloudwatchlogs:eks"" ""user.username""=""system:anonymous"" verb=list objectRef.resource=pods requestURI=""/api/v1/pods"" | rename source as cluster_name sourceIPs{} as src_ip | stats count min(_time) as firstTime max(_time) as lastTime values(responseStatus.reason) values(responseStatus.code) values(userAgent) values(verb) values(requestURI) by src_ip cluster_name user.username user.groups{} | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `kubernetes_pods_aws_scan_fingerprint_detection`"
"ESCU Searches","DA-ESS-ContentUpdate","Amazon EKS Kubernetes cluster scan detection","This search provides information of unauthenticated requests via user agent and authentication data against Kubernetes cluster in AWS",,,threat,,,,,,,,,"search sourcetype=""aws:cloudwatchlogs:eks"" ""user.username""=""system:anonymous"" userAgent!=""AWS Security Scanner"" | rename sourceIPs{} as src_ip | stats count min(_time) as firstTime max(_time) as lastTime values(responseStatus.reason) values(source) as cluster_name values(responseStatus.code) values(userAgent) as http_user_agent values(verb) values(requestURI) by src_ip user.username user.groups{} | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` |`kubernetes_aws_scan_fingerprint_detection`"
"ESCU Searches","DA-ESS-ContentUpdate","Attempt To Add Certificate To Untrusted Store","Attempt to add a certificate to the untrusted certificate store",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=certutil.exe (Processes.process=*-addstore* AND Processes.process=*disallowed* ) by Processes.parent_process Processes.process_name Processes.user | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Attempt To Set Default PowerShell Execution Policy To Unrestricted or Bypass","Monitor for changes of the ExecutionPolicy in the registry to the values ""unrestricted"" or ""bypass"" which allows the execution of malicious scripts.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=*Software\\Microsoft\\Powershell\\1\\ShellIds\\Microsoft.PowerShell* Registry.registry_key_name=ExecutionPolicy (Registry.registry_value_name=Unrestricted OR Registry.registry_value_name=Bypass) by Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.dest | `drop_dm_object_name(Registry)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `attempt_to_set_default_powershell_execution_policy_to_unrestricted_or_bypass_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Attempt To Stop Security Service","This search looks for attempts to stop security-related services on the endpoint.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = net.exe OR  Processes.process_name = sc.exe) Processes.process=""* stop *"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` |lookup security_services_lookup service as process OUTPUTNEW category, description | search category=security"
"ESCU Searches","DA-ESS-ContentUpdate","Attempted Credential Dump From Registry via Reg.exe","Monitor for execution of reg.exe with parameters specifying an export of keys that contain hashed credentials that attackers may try to crack offline.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=reg.exe OR Processes.process_name=cmd.exe) Processes.process=*save* (Processes.process=*HKEY_LOCAL_MACHINE\\Security* OR Processes.process=*HKEY_LOCAL_MACHINE\\SAM* OR Processes.process=*HKEY_LOCAL_MACHINE\\System* OR Processes.process=*HKLM\\Security* OR Processes.process=*HKLM\\System* OR Processes.process=*HKLM\\SAM*) by Processes.user Processes.process_name Processes.process Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `attempted_credential_dump_from_registry_via_reg_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Batch File Write to System32","The search looks for a batch file (.bat) written to the Windows system directory tree.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.dest) as dest values(Filesystem.file_name) as file_name values(Filesystem.user) as user from datamodel=Endpoint.Filesystem by Filesystem.file_path | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`| rex field=file_name ""(?<file_extension>\.[^\.]+)$"" | search file_path=*system32* AND file_extension=.bat"
"ESCU Searches","DA-ESS-ContentUpdate","Child Processes of Spoolsv.exe","This search looks for child processes of spoolsv.exe. This activity is associated with a POC privilege-escalation exploit associated with CVE-2018-8440. Spoolsv.exe is the process associated with the Print Spooler service in Windows and typically runs as SYSTEM.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=spoolsv.exe AND Processes.process_name!=regsvr32.exe by Processes.dest Processes.parent_process Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `children_of_spoolsv_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Clients Connecting to Multiple DNS Servers","This search allows you to identify the endpoints that have connected to more than five DNS servers and made DNS Queries over the time frame of the search.","Network_Resolution",,network,,,,,,,,," tstats `security_content_summariesonly` count, values(DNS.dest) AS dest dc(DNS.dest) as dest_count from datamodel=Network_Resolution where DNS.message_type=QUERY by DNS.src | `drop_dm_object_name(""Network_Resolution"")` |where dest_count > 5 | `clients_connecting_to_multiple_dns_servers_output_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Cloud Compute Instance Created By Previously Unseen User","This search looks for cloud compute instances created by users who have not created them before.","Cloud_Infrastructure",,endpoint,,,,,,,,," tstats `security_content_summariesonly` earliest(_time) as firstTime, latest(_time) as lastTime values(Compute.dest) as dest from datamodel=Cloud_Infrastructure.Compute where Compute.action=run by Compute.src_user | `drop_dm_object_name(""Compute"")` | inputlookup append=t previously_seen_cloud_compute_creations_by_user  | stats min(firstTime) as firstTime max(lastTime) as lastTime, values(dest) as dest by src_user | multireport [| table src_user, firstTime, lastTime | outputlookup previously_seen_cloud_compute_creations_by_user | where fact=fiction][| eval new_user=if(firstTime >= relative_time(now(), `previously_seen_cloud_compute_creations_by_user_search_window_begin_offset`), 1, 0) | where new_user=1 | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`] | table src_user, dest, firstTime, lastTime"
"ESCU Searches","DA-ESS-ContentUpdate","Cloud Compute Instance Created With Previously Unseen Image","This search looks for cloud compute instances being created with previously unseen image IDs.","Cloud_Infrastructure",,endpoint,,,,,,,,," tstats earliest(_time) as firstTime, latest(_time) as lastTime values(Compute.dest) as dest from datamodel=Cloud_Infrastructure.Compute where Compute.action=run `previously_seen_cloud_compute_image_input_filter` by Compute.image_id, Compute.src_user | `drop_dm_object_name(""Compute"")` | inputlookup append=t previously_seen_cloud_compute_images | stats min(firstTime) as firstTime max(lastTime) as lastTime, values(dest) as dest by image_id, src_user | multireport [| table image_id, firstTime, lastTime | outputlookup previously_seen_cloud_compute_images | where fact=fiction][| eval new_image=if(firstTime >= relative_time(now(), `previously_seen_cloud_compute_image_search_window_begin_offset`), 1, 0) | where new_image=1 | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`] | table image_id, dest, src_user, firstTime, lastTime"
"ESCU Searches","DA-ESS-ContentUpdate","Cloud Compute Instance Created With Previously Unseen Instance Type","Find EC2 instances being created with previously unseen instance types.","Cloud_Infrastructure",,endpoint,,,,,,,,," tstats earliest(_time) as firstTime, latest(_time) as lastTime values(Compute.dest) as dest from datamodel=Cloud_Infrastructure.Compute where Compute.event_name=RunInstances `previously_seen_cloud_compute_instance_types_input_filter` by Compute.instance_type, Compute.src_user | `drop_dm_object_name(""Compute"")` | inputlookup append=t previously_seen_cloud_compute_instance_types | stats min(firstTime) as firstTime max(lastTime) as lastTime, values(dest) as dest by instance_type, src_user | multireport [| table instance_type, firstTime, lastTime | outputlookup previously_seen_cloud_compute_instance_types | where fact=fiction][| eval new_type=if(firstTime >= relative_time(now(), `previously_seen_cloud_compute_instance_types_search_window_begin_offset`), 1, 0) | where new_type=1 | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`] | table instance_type, dest, src_user, firstTime, lastTime"
"ESCU Searches","DA-ESS-ContentUpdate","Cloud Compute Instance Started In Previously Unused Region","This search looks at cloud-infrastructure events where an instance is created in any region within the last hour and then compares it to a lookup file of previously seen regions where instances have been created.","Cloud_Infrastructure",,network,,,,,,,,," tstats earliest(_time) as firstTime, latest(_time) as lastTime values(Compute.dest) as dest from datamodel=Cloud_Infrastructure.Compute where Compute.event_name=RunInstances `previously_seen_cloud_regions_input_filter` by Compute.region, Compute.src_user | `drop_dm_object_name(""Compute"")` | inputlookup append=t previously_seen_cloud_regions | stats min(firstTime) as firstTime max(lastTime) as lastTime, values(dest) as dest by region, src_user | multireport [| table region, firstTime, lastTime | outputlookup previously_seen_cloud_regions | where fact=fiction][| eval new_region=if(firstTime >= relative_time(now(), `previously_seen_cloud_regions_search_window_begin_offset`), 1, 0) | where new_region=1 | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`] | table region, dest, src_user, firstTime, lastTime"
"ESCU Searches","DA-ESS-ContentUpdate","Common Ransomware Extensions","The search looks for file modifications with extensions commonly used by Ransomware",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`| rex field=file_name ""(?<file_extension>\.[^\.]+)$"" | `ransomware_extensions` | `common_ransomware_extensions_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Common Ransomware Notes","The search looks for files created with names matching those typically used in ransomware notes that tell the victim how to get their data back.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`|`ransomware_notes`| `common_ransomware_notes_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Create Remote Thread into LSASS","Detect remote thread creation into LSASS consistent with credential dumping.",,,endpoint,,,,,,,,,"search `sysmon` EventID=8 TargetImage=*lsass.exe | stats count min(_time) as firstTime max(_time) as lastTime by Computer, EventCode, TargetImage, TargetProcessId | rename Computer as dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` |`create_remote_thread_into_lsass_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Create local admin accounts using net.exe","This search looks for the creation of local administrator accounts using net.exe.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.user) as user values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processs.process_name=net.exe OR Processes.process_name=net1.exe) by Processes.process Processes.process_name Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`  | search (process=*localgroup* OR process=*/add* OR process=*user*) |`create_local_admin_via_net_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Create or delete windows shares using net.exe","This search looks for the creation or deletion of hidden shares using net.exe.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.user) as user values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processs.process_name=net.exe OR Processes.process_name=net1.exe) by Processes.process Processes.process_name Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | search (process=*share* AND process=*delete*) | `create_or_delete_windows_shares_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Creation of Shadow Copy","Monitor for signs that Ntdsutil Vssadmin or Wmic has been used to create a shadow copy.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=ntdsutil.exe Processes.process=*ntds* Processes.process=*create*) OR (Processes.process_name=vssadmin.exe Processes.process=*create* Processes.process=*shadow*) OR (Processes.process_name=wmic.exe Processes.process=*shadowcopy* Processes.process=*create*) by Processes.dest Processes.user Processes.process_name Processes.process  Processes.parent_process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `creation_of_shadow_copy_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Creation of Shadow Copy with wmic and powershell","This search detects the use of wmic and Powershell to create a shadow copy.",,,endpoint,,,,,,,,,"search `sysmon` Message=*win32_shadowcopy* Message=*Create* | stats count min(_time) as firstTime max(_time) as lastTime by dvc User EventCode Message | rename User as user, dvc as dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `creation_of_shadow_copy_with_wmic_and_powershell_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Credential Dumping via Copy Command from Shadow Copy","This search detects credential dumping using copy command from a shadow copy.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe (Processes.process=*\\system32\\config\\sam* OR Processes.process=*\\system32\\config\\security* OR Processes.process=*\\system32\\config\\system* OR Processes.process=*\\windows\\ntds\\ntds.dit*) by Processes.dest Processes.user Processes.process_name Processes.process  Processes.parent_process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `cred_dump_via_copy_from_shadowcopy_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Credential Dumping via Symlink to Shadow Copy","This search detects the creation of a symlink to a shadow copy.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe Processes.process=*mklink* Processes.process=*HarddiskVolumeShadowCopy* by Processes.dest Processes.user Processes.process_name Processes.process  Processes.parent_process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `cred_dump_via_symlink_shadowcopy_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","DNS Query Length Outliers - MLTK","This search allows you to identify DNS requests that are unusually large for the record type being requested in your environment.","Network_Resolution",,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as start_time max(_time) as end_time values(DNS.src) as src values(DNS.dest) as dest from datamodel=Network_Resolution by DNS.query DNS.record_type | search DNS.record_type=* |  `drop_dm_object_name(DNS)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | eval query_length = len(query) | apply dns_query_pdfmodel threshold=0.01 | rename ""IsOutlier(query_length)"" as isOutlier | search isOutlier > 0 | sort -query_length | table start_time end_time query record_type count src dest query_length | `dns_query_length_mltk_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","DNS Query Length With High Standard Deviation","This search allows you to identify DNS requests and compute the standard deviation on the length of the names being resolved then filter on two times the standard deviation to show you those queries that are unusually large for your environment.","Network_Resolution",,network,,,,,,,,," tstats `security_content_summariesonly` count from datamodel=Network_Resolution by DNS.query DNS.record_type |  `drop_dm_object_name(""DNS"")` | eval query_length = len(query) | table query query_length record_type count | eventstats stdev(query_length) AS stdev avg(query_length) AS avg p50(query_length) AS p50| where query_length>(avg+stdev*2) | eval z_score=(query_length-avg)/stdev | `dns_query_length_with_high_standard_deviation_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","DNS Query Requests Resolved by Unauthorized DNS Servers","This search will detect DNS requests resolved by unauthorized DNS servers. Legitimate DNS servers should be identified in the Enterprise Security Assets and Identity Framework.","Network_Resolution",,network,,,,,,,,," tstats `security_content_summariesonly` count from datamodel=Network_Resolution where DNS.dest_category != dns_server AND DNS.src_category != dns_server by DNS.src DNS.dest | `drop_dm_object_name(""DNS"")` | `unauthorized_dns_servers_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","DNS record changed","The search takes the DNS records and their answers results of the discovered_dns_records lookup and finds if any records have changed by searching DNS response from the Network_Resolution datamodel across the last day.","Network_Resolution",,network,,,,,,,,," inputlookup discovered_dns_records.csv | rename answer as discovered_answer | join domain[|tstats `security_content_summariesonly` count values(DNS.record_type) as type, values(DNS.answer) as current_answer values(DNS.src) as src from datamodel=Network_Resolution where DNS.message_type=RESPONSE DNS.answer!=""unknown"" DNS.answer!="""" by DNS.query | rename DNS.query as query | where query!=""unknown"" | rex field=query ""(?<domain>\w+\.\w+?)(?:$|/)""] | makemv delim="" "" answer |  makemv delim="" "" type | sort -count | table count,src,domain,type,query,current_answer,discovered_answer | makemv current_answer  | mvexpand current_answer | makemv discovered_answer | eval n=mvfind(discovered_answer, current_answer) | where isnull(n) | `dns_record_changed_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Deleting Shadow Copies","The vssadmin.exe utility is used to interact with the Volume Shadow Copy Service.  Wmic is an interface to the Windows Management Instrumentation.  This search looks for either of these tools being used to delete shadow copies.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=vssadmin.exe OR Processes.process_name=wmic.exe)  by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | search process=*delete* AND process=*shadow*"
"ESCU Searches","DA-ESS-ContentUpdate","Detect API activity from users without MFA","This search looks for CloudTrail events where a user logged into the AWS account is making API calls and has not enabled Multi Factor authentication. Multi factor authentication adds a layer of security by forcing the users to type a unique authentication code from an approved authentication device when they access AWS websites or services. AWS Best Practices recommend that you enable MFA for privileged IAM users.",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail userIdentity.sessionContext.attributes.mfaAuthenticated=false | search NOT [| inputlookup aws_service_accounts | fields identity | rename identity as user]| stats  count min(_time) as firstTime max(_time) as lastTime values(eventName) as eventName by userIdentity.arn userIdentity.type user | `security_content_ctime(firstTime)`  | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect AWS API Activities From Unapproved Accounts","This search looks for successful CloudTrail activity by user accounts that are not listed in the identity table or `aws_service_accounts.csv`. It returns event names and count as well as the first and last time a specific user or service is detected grouped by users.",,,access,,,,,,,,,"search sourcetype=aws:cloudtrail errorCode=success | rename userName as identity | search NOT [| inputlookup identity_lookup_expanded | fields identity] | search NOT [| inputlookup aws_service_accounts | fields identity] | rename identity as user | stats count min(_time) as firstTime max(_time) as lastTime values(eventName) as eventName by user | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect AWS Console Login by User from New City","This search looks for CloudTrail events wherein a console login event by a user was recorded within the last hour then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour",,,network,,,,,,,,," inputlookup previously_seen_users_console_logins.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by user City | join user type=outer [| inputlookup previously_seen_users_console_logins.csv | stats min(firstTime) AS earliestseen by user | fields earliestseen user] | eval userStatus=if(firstTime >= relative_time(now(), ""@d""), ""New City"",""Previously Seen City"") | eval UserData=if(earliestseen >= relative_time(now(), ""@d"") OR isnull(earliestseen), ""New User"",""Old User"") | where userStatus=""New City"" AND UserData=""Old User"" | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`| `security_content_ctime(earliestseen)` | table user City userStatus firstTime lastTime earliestseen"
"ESCU Searches","DA-ESS-ContentUpdate","Detect AWS Console Login by User from New Country","This search looks for CloudTrail events wherein a console login event by a user was recorded within the last hour then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour",,,network,,,,,,,,," inputlookup previously_seen_users_console_logins.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by user Country | join user type=outer [| inputlookup previously_seen_users_console_logins.csv | stats min(firstTime) AS earliestseen by user | fields earliestseen user] | eval userStatus=if(firstTime >= relative_time(now(), ""@d""), ""New Country"",""Previously Seen Country"") | eval UserData=if(earliestseen >= relative_time(now(), ""@d"") OR isnull(earliestseen), ""New User"",""Old User"") | where userStatus=""New Country"" AND UserData=""Old User"" | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`|`security_content_ctime(earliestseen)` | table user Country userStatus firstTime lastTime earliestseen"
"ESCU Searches","DA-ESS-ContentUpdate","Detect AWS Console Login by User from New Region","This search looks for CloudTrail events wherein a console login event by a user was recorded within the last hour then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour",,,network,,,,,,,,," inputlookup previously_seen_users_console_logins.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by user Region | join user type=outer [| inputlookup previously_seen_users_console_logins.csv | stats min(firstTime) AS earliestseen by user | fields earliestseen user] | eval userStatus=if(firstTime >= relative_time(now(), ""@d""), ""New Region"",""Previously Seen Region"") | eval UserData=if(earliestseen >= relative_time(now(), ""@d"") OR isnull(earliestseen), ""New User"",""Old User"") | where userStatus=""New Region"" AND UserData=""Old User"" | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `security_content_ctime(earliestseen)` | table user Region userStatus firstTime lastTime earliestseen"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Activity Related to Pass the Hash Attacks","This search looks for specific authentication events from the Windows Security Event logs to detect potential attempts at using the Pass-the-Hash technique.",,,access,,,,,,,,,"search `wineventlog_security` EventCode=4624 (Logon_Type=3 LogonProcessName=NtLmSsp WorkstationName=WORKSTATION NOT AccountName=""ANONYMOUS LOGON"") OR (EventCode=4624 Logon_Type=9 LogonProcessName=seclogo) | stats count min(_time) as firstTime max(_time) as lastTime by EventCode, Logon_Type, WorkstationName, user, dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `detect_activity_related_to_pass_the_hash_attacks_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Credential Dumping through LSASS access","This search looks for reading lsass memory consistent with credential dumping.",,,endpoint,,,,,,,,,"search `sysmon` EventCode=10 TargetImage=*lsass.exe (GrantedAccess=0x1010 OR GrantedAccess=0x1410) | stats count min(_time) as firstTime max(_time) as lastTime by Computer, SourceImage, SourceProcessId, TargetImage, TargetProcessId, EventCode, GrantedAccess | rename Computer as dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `detect_credential_dumping_through_LSASS_access_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect DNS requests to Phishing Sites leveraging EvilGinx2","This search looks for DNS requests for phishing domains that are leveraging EvilGinx tools to mimic websites.",Web,,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(DNS.answer) as answer from datamodel=Network_Resolution.DNS by DNS.dest DNS.src DNS.query host | `drop_dm_object_name(DNS)`| rex field=query "".*?(?<domain>[^./:]+\.(\S{2,3}|\S{2,3}.\S{2,3}))$"" | stats count values(query) as query by domain dest src answer| search `evilginx_phishlets_amazon` OR `evilginx_phishlets_facebook` OR `evilginx_phishlets_github` OR `evilginx_phishlets_0365` OR `evilginx_phishlets_outlook` OR `evilginx_phishlets_aws` OR `evilginx_phishlets_google` | search NOT [ inputlookup legit_domains.csv | fields domain]| join domain type=outer [| tstats count `security_content_summariesonly` values(Web.url) as url from datamodel=Web.Web by Web.dest Web.site | rename ""Web.*"" as * | rex field=site "".*?(?<domain>[^./:]+\.(\S{2,3}|\S{2,3}.\S{2,3}))$"" | table dest domain url] | table count src dest query answer domain url"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Excessive Account Lockouts From Endpoint","This search identifies endpoints that have caused a relatively high number of account lockouts in a short period.",Change,,access,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management All_Changes.result=""lockout"" by All_Changes.dest All_Changes.result |`drop_dm_object_name(""All_Changes"")` |`drop_dm_object_name(""Account_Management"")`| `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | search count > 5"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Excessive User Account Lockouts","This search detects user accounts that have been locked out a relatively high number of times in a short period.",Change,,access,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Change.All_Changes where nodename=All_Changes.Account_Management All_Changes.result=""lockout"" by All_Changes.user All_Changes.result |`drop_dm_object_name(""All_Changes"")` |`drop_dm_object_name(""Account_Management"")`| `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | search count > 5"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Large Outbound ICMP Packets","This search looks for outbound ICMP packets with a packet size larger than 1000 bytes. Various threat actors have been known to use ICMP as a command and control channel for their attack infrastructure. Large ICMP packets from an endpoint to a remote host may be indicative of this activity.","Network_Traffic",,network,,,,,,,,," tstats `security_content_summariesonly` count earliest(_time) as firstTime latest(_time) as lastTime values(All_Traffic.action) values(All_Traffic.bytes) from datamodel=Network_Traffic where All_Traffic.action !=blocked All_Traffic.dest_category !=internal (All_Traffic.protocol=icmp OR All_Traffic.transport=icmp) All_Traffic.bytes > 1000 by All_Traffic.src_ip All_Traffic.dest_ip | `drop_dm_object_name(""All_Traffic"")` | search ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16) | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Long DNS TXT Record Response","This search is used to detect attempts to use DNS tunneling by calculating the length of responses to DNS TXT queries. Endpoints using DNS as a method of transmission for data exfiltration command and control or evasion of security controls can often be detected by noting unusually large volumes of DNS traffic.","Network_Resolution",,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Resolution where DNS.message_type=response AND DNS.record_type=TXT by DNS.src DNS.dest DNS.answer DNS.record_type |  `drop_dm_object_name(""DNS"")` | eval anslen=len(answer) | search anslen>100 | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename src as ""Source IP"", dest as ""Destination IP"", answer as ""DNS Answer"" anslen as ""Answer Length"" record_type as ""DNS Record Type"" firstTime as ""First Time"" lastTime as ""Last Time"" count as Count | table ""Source IP"" ""Destination IP"" ""DNS Answer"" ""DNS Record Type""  ""Answer Length"" Count ""First Time"" ""Last Time"""
"ESCU Searches","DA-ESS-ContentUpdate","Detect Mimikatz Using Loaded Images","This search looks for reading loaded Images unique to credential dumping with Mimikatz.",,,endpoint,,,,,,,,,"search `sysmon` EventCode=7 | stats values(ImageLoaded) as ImageLoaded values(ProcessId) as ProcessId by Computer, Image | search ImageLoaded=*WinSCard.dll ImageLoaded=*cryptdll.dll ImageLoaded=*hid.dll ImageLoaded=*samlib.dll ImageLoaded=*vaultcli.dll | rename Computer as dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `detect_mimikatz_using_loaded_images_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Mimikatz Via PowerShell And EventCode 4703","This search looks for PowerShell requesting privileges consistent with credential dumping.",,,access,,,,,,,,,"search eventtype=wineventlog_security signature_id=4703 Process_Name=*powershell.exe | rex field=Message ""Enabled Privileges:\s+(?<privs>\w+)\s+Disabled Privileges:"" | where privs=""SeDebugPrivilege"" | stats count min(_time) as firstTime max(_time) as lastTime by dest, Process_Name, privs, Process_ID, Message | rename privs as ""Enabled Privilege"" | rename Process_Name as process |  `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect New Local Admin account","This search looks for newly created accounts that have been elevated to local administrators.",,,access,,,,,,,,,"search eventtype = wineventlog_security signature_id=4720 OR (signature_id=4732 Group_Name= Administrators) | transaction Security_ID connected=false maxspan=180m | search signature_id=4720 signature_id=4732 | table _time user dest signature_id Security_ID Group_Name src_user Message"
"ESCU Searches","DA-ESS-ContentUpdate","Detect New Login Attempts to Routers","The search queries the authentication logs for assets that are categorized as routers in the ES Assets and Identity Framework to identify connections that have not been seen before in the last 30 days.",Authentication,,network,,,,,,,,," tstats `security_content_summariesonly` count earliest(_time) as earliest latest(_time) as latest from datamodel=Authentication where Authentication.dest_category=router by Authentication.dest Authentication.user| eval isOutlier=if(earliest >= relative_time(now(), ""-30d@d""), 1, 0) | where isOutlier=1| `security_content_ctime(earliest)`| `security_content_ctime(latest)` | `drop_dm_object_name(""Authentication"")`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect New Open S3 buckets","This search looks for CloudTrail events where a user has created an open/public S3 bucket.",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail AllUsers eventName=PutBucketAcl | spath output=userIdentityArn path=userIdentity.arn | spath output=bucketName path=requestParameters.bucketName | spath output=aclControlList path=requestParameters.AccessControlPolicy.AccessControlList | spath input=aclControlList output=grantee path=Grant{} | mvexpand grantee | spath input=grantee | search Grantee.URI=*AllUsers | rename userIdentityArn as user| table _time, src,awsRegion Permission, Grantee.URI, bucketName, user"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Oulook.exe writing a .zip file","This search looks for execution of process `outlook.exe` where the process is writing a `.zip` file to the disk.",Endpoint,,network,,,,,,,,," tstats `security_content_summariesonly`  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_name=outlook.exe OR Processes.process_name=explorer.exe by _time span=5m Processes.parent_process_id Processes.process_id Processes.dest Processes.process_name Processes.parent_process_name Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename process_id as malicious_id| rename parent_process_id as outlook_id| join malicious_id type=inner[| tstats `security_content_summariesonly` count values(Filesystem.file_path) as file_path values(Filesystem.file_name) as file_name  FROM datamodel=Endpoint.Filesystem where (Filesystem.file_path=*zip*   OR Filesystem.file_name=*.lnk ) AND (Filesystem.file_path=C:\\Users* OR Filesystem.file_path=*Local\\Temp*) by  _time span=5m Filesystem.process_id Filesystem.file_hash Filesystem.dest  | `drop_dm_object_name(Filesystem)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename process_id as malicious_id| fields malicious_id outlook_id dest file_path file_name file_hash count file_id] | table firstTime lastTime user malicious_id outlook_id process_name parent_process_name file_name  file_path | where file_name != """" | `outlook_writing_zip_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Outbound SMB Traffic","This search looks for outbound SMB connections made by hosts within your network to the Internet. SMB traffic is used for Windows file-sharing activity. One of the techniques often used by attackers involves retrieving the credential hash using an SMB request made to a compromised server controlled by the threat actor.","Network_Traffic",,network,,,,,,,,," tstats `security_content_summariesonly` count earliest(_time) as earliest latest(_time) as latest values(All_Traffic.action) from datamodel=Network_Traffic where All_Traffic.action !=blocked All_Traffic.dest_category !=internal (All_Traffic.dest_port=139 OR All_Traffic.dest_port=445 OR All_Traffic.app=smb) by All_Traffic.src_ip All_Traffic.dest_ip | `drop_dm_object_name(""All_Traffic"")` | search ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16) | `security_content_ctime(earliest)`| `security_content_ctime(latest)` | `outbound_smb_connections_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Path Interception By Creation Of program.exe","The search is looking for the creation of program.exe in the C: drive.  The creation of this file in that location may be driven by a motive to perform path interception.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_hash) as file_hash values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem where Filesystem.file_path=""C:\\program.exe"" by Filesystem.file_name | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Prohibited Applications Spawning cmd.exe","This search looks for executions of cmd.exe spawned by a process that is often abused by attackers and that does not typically launch cmd.exe.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe by Processes.parent_process_name Processes.process_name Processes.dest Processes.user| `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` |search [`prohibited_apps_launching_cmd`]"
"ESCU Searches","DA-ESS-ContentUpdate","Detect PsExec With accepteula Flag","This search looks for events where `PsExec.exe` is run with the `accepteula` flag in the command line. PsExec is a built-in Windows utility that enables you to execute processes on other systems. It is fully interactive for console applications. This tool is widely used for launching interactive command prompts on remote systems. Threat actors leverage this extensively for executing code on compromised systems. If an attacker is running PsExec for the first time they will be prompted to accept the end-user license agreement (EULA) which can be passed as the argument `accepteula` within the command line.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = PsExec.exe Processes.process = ""*accepteula*"" by Processes.process_name Processes.dest  Processes.parent_process_name | `drop_dm_object_name(Processes)`| `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Rare Executables","This search will return a table of rare processes the names of the systems running them and the users who initiated each process.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.dest) as dest values(Processes.user) as user min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.process_name  | rename Processes.process_name as process | rex field=user ""(?<user_domain>.*)\\\\(?<user_name>.*)"" | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| search [| tstats count from datamodel=Endpoint.Processes by Processes.process_name | rare Processes.process_name limit=30 | rename Processes.process_name as process| `filter_rare_process_whitelist`| table process ] | `rare_executables_on_endpoint_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect S3 access from a new IP","This search looks at S3 bucket-access logs and detects new or previously unseen remote IP addresses that have successfully accessed an S3 bucket.",,,network,,,,,,,,,"search sourcetype=aws:s3:accesslogs http_status=200  [search sourcetype=aws:s3:accesslogs http_status=200 | stats earliest(_time) as firstTime latest(_time) as lastTime by bucket_name remote_ip | inputlookup append=t previously_seen_S3_access_from_remote_ip.csv | stats min(firstTime) as firstTime, max(lastTime) as lastTime by bucket_name remote_ip | outputlookup previously_seen_S3_access_from_remote_ip.csv | eval newIP=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newIP=1 | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | table bucket_name remote_ip]| iplocation remote_ip |rename remote_ip as src_ip | table _time bucket_name src_ip City Country operation request_uri"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Spike in AWS API Activity","This search will detect users creating spikes of API activity in your AWS environment.  It will also update the cache file that factors in the latest data.",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail eventType=AwsApiCall [search sourcetype=aws:cloudtrail eventType=AwsApiCall | spath output=arn path=userIdentity.arn | stats count as apiCalls by arn | inputlookup api_call_by_user_baseline append=t | fields - latestCount | stats values(*) as * by arn | rename apiCalls as latestCount | eval newAvgApiCalls=avgApiCalls + (latestCount-avgApiCalls)/720 | eval newStdevApiCalls=sqrt(((pow(stdevApiCalls, 2)*719 + (latestCount-newAvgApiCalls)*(latestCount-avgApiCalls))/720)) | eval avgApiCalls=coalesce(newAvgApiCalls, avgApiCalls), stdevApiCalls=coalesce(newStdevApiCalls, stdevApiCalls), numDataPoints=if(isnull(latestCount), numDataPoints, numDataPoints+1) | table arn, latestCount, numDataPoints, avgApiCalls, stdevApiCalls | outputlookup api_call_by_user_baseline | eval dataPointThreshold = 15, deviationThreshold = 3 | eval isSpike=if((latestCount > avgApiCalls+deviationThreshold*stdevApiCalls) AND numDataPoints > dataPointThreshold, 1, 0) | where isSpike=1 | rename arn as userIdentity.arn | table userIdentity.arn] | spath output=user userIdentity.arn | stats values(eventName) as eventName, count as numberOfApiCalls, dc(eventName) as uniqueApisCalled by user"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Spike in Network ACL Activity","This search will detect users creating spikes in API activity related to network access-control lists (ACLs)in your AWS environment.",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail `network_acl_events` [search sourcetype=aws:cloudtrail `network_acl_events` | spath output=arn path=userIdentity.arn | stats count as apiCalls by arn | inputlookup network_acl_activity_baseline append=t | fields - latestCount | stats values(*) as * by arn | rename apiCalls as latestCount | eval newAvgApiCalls=avgApiCalls + (latestCount-avgApiCalls)/720 | eval newStdevApiCalls=sqrt(((pow(stdevApiCalls, 2)*719 + (latestCount-newAvgApiCalls)*(latestCount-avgApiCalls))/720)) | eval avgApiCalls=coalesce(newAvgApiCalls, avgApiCalls), stdevApiCalls=coalesce(newStdevApiCalls, stdevApiCalls), numDataPoints=if(isnull(latestCount), numDataPoints, numDataPoints+1) | table arn, latestCount, numDataPoints, avgApiCalls, stdevApiCalls | outputlookup network_acl_activity_baseline | eval dataPointThreshold = 15, deviationThreshold = 3 | eval isSpike=if((latestCount > avgApiCalls+deviationThreshold*stdevApiCalls) AND numDataPoints > dataPointThreshold, 1, 0) | where isSpike=1 | rename arn as userIdentity.arn | table userIdentity.arn] | spath output=user userIdentity.arn | stats values(eventName) as eventNames, count as numberOfApiCalls, dc(eventName) as uniqueApisCalled by user"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Spike in S3 Bucket deletion","This search detects users creating spikes in API activity related to deletion of S3 buckets in your AWS environment. It will also update the cache file that factors in the latest data.",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail eventName=DeleteBucket [search sourcetype=aws:cloudtrail eventName=DeleteBucket | spath output=arn path=userIdentity.arn | stats count as apiCalls by arn | inputlookup s3_deletion_baseline append=t | fields - latestCount | stats values(*) as * by arn | rename apiCalls as latestCount | eval newAvgApiCalls=avgApiCalls + (latestCount-avgApiCalls)/720 | eval newStdevApiCalls=sqrt(((pow(stdevApiCalls, 2)*719 + (latestCount-newAvgApiCalls)*(latestCount-avgApiCalls))/720)) | eval avgApiCalls=coalesce(newAvgApiCalls, avgApiCalls), stdevApiCalls=coalesce(newStdevApiCalls, stdevApiCalls), numDataPoints=if(isnull(latestCount), numDataPoints, numDataPoints+1) | table arn, latestCount, numDataPoints, avgApiCalls, stdevApiCalls | outputlookup s3_deletion_baseline | eval dataPointThreshold = 15, deviationThreshold = 3 | eval isSpike=if((latestCount > avgApiCalls+deviationThreshold*stdevApiCalls) AND numDataPoints > dataPointThreshold, 1, 0) | where isSpike=1 | rename arn as userIdentity.arn | table userIdentity.arn] | spath output=user userIdentity.arn | spath output=bucketName path=requestParameters.bucketName | stats values(bucketName) as bucketName, count as numberOfApiCalls, dc(eventName) as uniqueApisCalled by user"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Spike in Security Group Activity","This search will detect users creating spikes in API activity related to security groups in your AWS environment.  It will also update the cache file that factors in the latest data.",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail `security_group_api_calls` [search sourcetype=aws:cloudtrail `security_group_api_calls` | spath output=arn path=userIdentity.arn | stats count as apiCalls by arn | inputlookup security_group_activity_baseline append=t | fields - latestCount | stats values(*) as * by arn | rename apiCalls as latestCount | eval newAvgApiCalls=avgApiCalls + (latestCount-avgApiCalls)/720 | eval newStdevApiCalls=sqrt(((pow(stdevApiCalls, 2)*719 + (latestCount-newAvgApiCalls)*(latestCount-avgApiCalls))/720)) | eval avgApiCalls=coalesce(newAvgApiCalls, avgApiCalls), stdevApiCalls=coalesce(newStdevApiCalls, stdevApiCalls), numDataPoints=if(isnull(latestCount), numDataPoints, numDataPoints+1) | table arn, latestCount, numDataPoints, avgApiCalls, stdevApiCalls | outputlookup security_group_activity_baseline | eval dataPointThreshold = 15, deviationThreshold = 3 | eval isSpike=if((latestCount > avgApiCalls+deviationThreshold*stdevApiCalls) AND numDataPoints > dataPointThreshold, 1, 0) | where isSpike=1 | rename arn as userIdentity.arn | table userIdentity.arn] | spath output=user userIdentity.arn | stats values(eventName) as eventNames, count as numberOfApiCalls, dc(eventName) as uniqueApisCalled by user"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Spike in blocked Outbound Traffic from your AWS","This search will detect spike in blocked outbound network connections originating from within your AWS environment.  It will also update the cache file that factors in the latest data.",,,network,,,,,,,,,"search sourcetype=aws:cloudwatchlogs:vpcflow action=blocked (src_ip=10.0.0.0/8 OR src_ip=172.16.0.0/12 OR src_ip=192.168.0.0/16) ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16)  [search  sourcetype=aws:cloudwatchlogs:vpcflow action=blocked (src_ip=10.0.0.0/8 OR src_ip=172.16.0.0/12 OR src_ip=192.168.0.0/16) ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16)  | stats count as numberOfBlockedConnections by src_ip | inputlookup baseline_blocked_outbound_connections append=t | fields - latestCount | stats values(*) as * by src_ip | rename numberOfBlockedConnections as latestCount | eval newAvgBlockedConnections=avgBlockedConnections + (latestCount-avgBlockedConnections)/720 | eval newStdevBlockedConnections=sqrt(((pow(stdevBlockedConnections, 2)*719 + (latestCount-newAvgBlockedConnections)*(latestCount-avgBlockedConnections))/720)) | eval avgBlockedConnections=coalesce(newAvgBlockedConnections, avgBlockedConnections), stdevBlockedConnections=coalesce(newStdevBlockedConnections, stdevBlockedConnections), numDataPoints=if(isnull(latestCount), numDataPoints, numDataPoints+1) | table src_ip, latestCount, numDataPoints, avgBlockedConnections, stdevBlockedConnections | outputlookup baseline_blocked_outbound_connections | eval dataPointThreshold = 5, deviationThreshold = 3 | eval isSpike=if((latestCount > avgBlockedConnections+deviationThreshold*stdevBlockedConnections) AND numDataPoints > dataPointThreshold, 1, 0) | where isSpike=1 | table src_ip] | stats values(dest_ip) as ""Blocked Destination IPs"", values(interface_id) as ""resourceId"" count as numberOfBlockedConnections, dc(dest_ip) as uniqueDestConnections by src_ip"
"ESCU Searches","DA-ESS-ContentUpdate","Detect USB device insertion","The search is used to detect hosts that generate Windows Event ID 4663 for successful attempts to write to or read from a removable storage and Event ID 4656 for failures which occurs when a USB drive is plugged in. In this scenario we are querying the Change_Analysis data model to look for Windows Event ID 4656 or 4663 where the priority of the affected host is marked as high in the ES Assets and Identity Framework.","Change_Analysis",,endpoint,,,,,,,,," tstats `security_content_summariesonly` count earliest(_time) AS earliest latest(_time) AS latest from datamodel=Change_Analysis where (nodename = All_Changes) All_Changes.result=""Removable Storage device"" (All_Changes.result_id=4663 OR All_Changes.result_id=4656) (All_Changes.src_priority=high) by All_Changes.dest | `drop_dm_object_name(""All_Changes"")`| `security_content_ctime(earliest)`| `security_content_ctime(latest)`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Unauthorized Assets by MAC address","By populating the organization's assets within the assets_by_str.csv we will be able to detect unauthorized devices that are trying to connect with the organization's network by inspecting DHCP request packets which are issued by devices when they attempt to obtain an IP address from the DHCP server. The MAC address associated with the source of the DHCP request is checked against the list of known devices and reports on those that are not found.","Network_Sessions",,network,,,,,,,,," tstats `security_content_summariesonly` count from datamodel=Network_Sessions where nodename=All_Sessions.DHCP All_Sessions.signature=DHCPREQUEST by All_Sessions.src_ip All_Sessions.src_mac | dedup All_Sessions.src_mac| `drop_dm_object_name(""Network_Sessions"")`|`drop_dm_object_name(""All_Sessions"")` | search NOT [| inputlookup asset_lookup_by_str |rename mac as src_mac | fields + src_mac]"
"ESCU Searches","DA-ESS-ContentUpdate","Detect Use of cmd.exe to Launch Script Interpreters","This search looks for the execution of the cscript.exe or wscript.exe processes with a parent of cmd.exe. The search will return the count the first and last time this execution was seen on a machine the user and the destination of the machine",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=""cmd.exe"" (Processes.process_name=cscript.exe OR Processes.process_name =wscript.exe) by Processes.parent_process Processes.process_name Processes.user Processes.dest | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect attackers scanning for vulnerable JBoss servers","This search looks for specific GET or HEAD requests to web servers that are indicative of reconnaissance attempts to identify vulnerable JBoss servers. JexBoss is described as the exploit tool of choice for this malicious activity.",Web,,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Web where (Web.http_method=""GET"" OR Web.http_method=""HEAD"") AND (Web.url=""*/web-console/ServerInfo.jsp*"" OR Web.url=""*web-console*"" OR Web.url=""*jmx-console*"" OR Web.url = ""*invoker*"") by Web.http_method, Web.url, Web.src, Web.dest | `drop_dm_object_name(""Web"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect hosts connecting to dynamic domain providers","Malicious actors often abuse legitimate Dynamic DNS services to host malicious payloads or interactive command and control nodes. Attackers will automate domain resolution changes by routing dynamic domains to countless IP addresses to circumvent firewall blocks blacklists as well as frustrate a network defenders analytic and investigative processes. This search will look for DNS queries made from within your infrastructure to suspicious dynamic domains.","Network_Resolution",,network,,,,,,,,," tstats `security_content_summariesonly` count values(DNS.answer) as answer min(_time) as firstTime from datamodel=Network_Resolution by DNS.src, DNS.query | `drop_dm_object_name(""DNS"")` | `security_content_ctime(firstTime)` | `dynamic_dns_providers`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect malicious requests to exploit JBoss servers","This search is used to detect malicious HTTP requests crafted to exploit jmx-console in JBoss servers. The malicious requests have a long URL length as the payload is embedded in the URL.",Web,,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Web where (Web.http_method=""GET"" OR Web.http_method=""HEAD"") by Web.http_method, Web.url,Web.url_length Web.src, Web.dest | search Web.url=""*jmx-console/HtmlAdaptor?action=invokeOpByName&name=jboss.admin*import*"" AND Web.url_length > 200 | `drop_dm_object_name(""Web"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | table src, dest_ip, http_method, url, firstTime, lastTime"
"ESCU Searches","DA-ESS-ContentUpdate","Detect mshta.exe running scripts in command-line arguments","This search looks for the execution of ""mshta.exe"" with command-line arguments that launch a script. The search will return the first time and last time these command-line arguments were used for these executions as well as the target system the user process ""mshta.exe"" and its parent process.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=mshta.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| search (process=*vbscript* OR process=*javascript*)"
"ESCU Searches","DA-ESS-ContentUpdate","Detect new API calls from user roles","This search detects new API calls that have either never been seen before or that have not been seen in the previous hour where the identity type is `AssumedRole`.",,,endpoint,,,,,,,,,"search sourcetype=aws:cloudtrail eventType=AwsApiCall errorCode=success userIdentity.type=AssumedRole [search sourcetype=aws:cloudtrail eventType=AwsApiCall errorCode=success  userIdentity.type=AssumedRole | stats earliest(_time) as earliest latest(_time) as latest by userName eventName |  inputlookup append=t previously_seen_api_calls_from_user_roles | stats min(earliest) as earliest, max(latest) as latest by userName eventName | outputlookup previously_seen_api_calls_from_user_roles| eval newApiCallfromUserRole=if(earliest>=relative_time(now(), ""-70m@m""), 1, 0) | where newApiCallfromUserRole=1 | `security_content_ctime(earliest)` | `security_content_ctime(latest)` | table eventName userName]  |rename userName as user| stats values(eventName) earliest(_time) as earliest latest(_time) as latest by user | `security_content_ctime(earliest)` | `security_content_ctime(latest)`"
"ESCU Searches","DA-ESS-ContentUpdate","Detect new user AWS Console Login","This search looks for CloudTrail events wherein a console login event by a user was recorded within the last hour then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail eventName=ConsoleLogin | rename userIdentity.arn as user | stats earliest(_time) as firstTime latest(_time) as lastTime by user | inputlookup append=t previously_seen_users_console_logins.csv  | stats min(firstTime) as firstTime max(lastTime) as lastTime by user | eval userStatus=if(firstTime >= relative_time(now(), ""-70m@m""), ""First Time Logging into AWS Console"",""Previously Seen User"") | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`| where userStatus =""First Time Logging into AWS Console"""
"ESCU Searches","DA-ESS-ContentUpdate","Detect processes used for System Network Configuration Discovery","This search looks for fast execution of processes used for system network configuration discovery on the endpoint.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest Processes.process_name Processes.user _time | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(Processes)` | search `system_network_configuration_discovery_tools` | transaction dest connected=false maxpause=5m |where eventcount>=5 | table firstTime lastTime dest user process_name process parent_process eventcount"
"ESCU Searches","DA-ESS-ContentUpdate","Detect web traffic to dynamic domain providers","This search looks for web connections to dynamic DNS providers.",Web,,network,,,,,,,,," tstats `security_content_summariesonly` count values(Web.url) as url min(_time) as firstTime from datamodel=Web where Web.status=200 by Web.src Web.dest Web.status | `drop_dm_object_name(""Web"")` | `security_content_ctime(firstTime)` | `dynamic_dns_web_traffic`"
"ESCU Searches","DA-ESS-ContentUpdate","Detection of DNS Tunnels","This search is used to detect DNS tunneling by calculating the sum of the length of DNS queries and DNS answers. The search also filters out potential false positives by filtering out queries made to internal systems and the queries originating from internal DNS Web and Email servers. Endpoints using DNS as a method of transmission for data exfiltration command and control or evasion of security controls can often be detected by noting an unusually large volume of DNS traffic.","Network_Resolution",,network,,,,,,,,," tstats `security_content_summariesonly` dc(""DNS.query"") as count  from datamodel=Network_Resolution  where nodename=DNS ""DNS.message_type""=""QUERY"" NOT (`cim_corporate_web_domain_search(""DNS.query"")`) NOT ""DNS.query""=""*.in-addr.arpa"" NOT (""DNS.src_category""=""svc_infra_dns"" OR ""DNS.src_category""=""svc_infra_webproxy"" OR ""DNS.src_category""=""svc_infra_email*""   ) by ""DNS.src"",""DNS.query"" | rename ""DNS.src"" as src  ""DNS.query"" as message | eval length=len(message) | stats sum(length) as length by src | append [ tstats `security_content_summariesonly` dc(""DNS.answer"") as count  from datamodel=Network_Resolution  where nodename=DNS ""DNS.message_type""=""QUERY"" NOT (`cim_corporate_web_domain_search(""DNS.query"")`) NOT ""DNS.query""=""*.in-addr.arpa"" NOT (""DNS.src_category""=""svc_infra_dns"" OR ""DNS.src_category""=""svc_infra_webproxy"" OR ""DNS.src_category""=""svc_infra_email*""   ) by ""DNS.src"",""DNS.answer"" | rename ""DNS.src"" as src  ""DNS.answer"" as message | eval message=if(message==""unknown"","""", message) | eval length=len(message) | stats sum(length) as length by src ] | stats sum(length) as length by src | where length > 10000"
"ESCU Searches","DA-ESS-ContentUpdate","Detection of tools built by NirSoft","This search looks for specific command-line arguments that may indicate the execution of tools made by Nirsoft which are legitimate but may be abused by attackers.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=""* /stext *"" OR Processes.process=""* /scomma *"" ) by Processes.parent_process Processes.process_name Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` |`security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Disabling Remote User Account Control","The search looks for modifications to registry keys that control the enforcement of Windows User Account Control (UAC).",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path=""*Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy"" by Registry.dest, Registry.registry_key_name Registry.user Registry.registry_path Registry.action | `drop_dm_object_name(Registry)`"
"ESCU Searches","DA-ESS-ContentUpdate","Dump LSASS via comsvcs DLL","Detect the usage of comsvcs.dll for dumping the lsass process.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=rundll32.exe Processes.process=*comsvcs.dll* Processes.process=*MiniDump* by Processes.user Processes.process_name Processes.process Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `dump_lsass_via_comsvcs_dll_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","EC2 Instance Modified With Previously Unseen User","This search looks for EC2 instances being modified by users who have not previously modified them.",,,endpoint,,,,,,,,,"search sourcetype=aws:cloudtrail `ec2_modification_api_calls` [search sourcetype=aws:cloudtrail `ec2_modification_api_calls` errorCode=success | stats earliest(_time) as firstTime latest(_time) as lastTime by userIdentity.arn | rename userIdentity.arn as arn | inputlookup append=t previously_seen_ec2_modifications_by_user | stats min(firstTime) as firstTime, max(lastTime) as lastTime by arn | outputlookup previously_seen_ec2_modifications_by_user | eval newUser=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newUser=1 | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename arn as userIdentity.arn | table userIdentity.arn] | spath output=dest responseElements.instancesSet.items{}.instanceId | spath output=user userIdentity.arn | table _time, user, dest"
"ESCU Searches","DA-ESS-ContentUpdate","EC2 Instance Started In Previously Unseen Region","This search looks for CloudTrail events where an instance is started in a particular region in the last one hour and then compares it to a lookup file of previously seen regions where an instance was started",,,network,,,,,,,,,"search sourcetype=aws:cloudtrail earliest=-1h StartInstances | stats earliest(_time) as earliest latest(_time) as latest by awsRegion | inputlookup append=t previously_seen_aws_regions.csv | stats min(earliest) as earliest max(latest) as latest by awsRegion | outputlookup previously_seen_aws_regions.csv | eval regionStatus=if(earliest >= relative_time(now(),""-1d@d""), ""Instance Started in a New Region"",""Previously Seen Region"") | `security_content_ctime(earliest)` | `security_content_ctime(latest)` | where regionStatus=""Instance Started in a New Region"""
"ESCU Searches","DA-ESS-ContentUpdate","EC2 Instance Started With Previously Unseen AMI","This search looks for EC2 instances being created with previously unseen AMIs.",,,endpoint,,,,,,,,,"search sourcetype=aws:cloudtrail eventName=RunInstances [search sourcetype=aws:cloudtrail eventName=RunInstances errorCode=success | stats earliest(_time) as firstTime latest(_time) as lastTime by requestParameters.instancesSet.items{}.imageId | rename requestParameters.instancesSet.items{}.imageId as amiID | inputlookup append=t previously_seen_ec2_amis.csv | stats min(firstTime) as firstTime max(lastTime) as lastTime by amiID | outputlookup previously_seen_ec2_amis.csv | eval newAMI=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)` | where newAMI=1 | rename amiID as requestParameters.instancesSet.items{}.imageId | table requestParameters.instancesSet.items{}.imageId] | rename requestParameters.instanceType as instanceType, responseElements.instancesSet.items{}.instanceId as dest, userIdentity.arn as arn, requestParameters.instancesSet.items{}.imageId as amiID | table firstTime, lastTime, arn, amiID, dest, instanceType"
"ESCU Searches","DA-ESS-ContentUpdate","EC2 Instance Started With Previously Unseen Instance Type","This search looks for EC2 instances being created with previously unseen instance types.",,,endpoint,,,,,,,,,"search sourcetype=aws:cloudtrail eventName=RunInstances [search sourcetype=aws:cloudtrail eventName=RunInstances errorCode=success | fillnull value=""m1.small"" requestParameters.instanceType | stats earliest(_time) as earliest latest(_time) as latest by requestParameters.instanceType | rename requestParameters.instanceType as instanceType | inputlookup append=t previously_seen_ec2_instance_types.csv | stats min(earliest) as earliest max(latest) as latest by instanceType | outputlookup previously_seen_ec2_instance_types.csv | eval newType=if(earliest >= relative_time(now(), ""-70m@m""), 1, 0) | `security_content_ctime(earliest)` | `security_content_ctime(latest)` | where newType=1 | rename instanceType as requestParameters.instanceType | table requestParameters.instanceType] | spath output=user userIdentity.arn | rename requestParameters.instanceType as instanceType, responseElements.instancesSet.items{}.instanceId as dest | table _time, user, dest, instanceType"
"ESCU Searches","DA-ESS-ContentUpdate","EC2 Instance Started With Previously Unseen User","This search looks for EC2 instances being created by users who have not created them before.",,,endpoint,,,,,,,,,"search sourcetype=aws:cloudtrail eventName=RunInstances [search sourcetype=aws:cloudtrail eventName=RunInstances errorCode=success | stats earliest(_time) as firstTime latest(_time) as lastTime by userIdentity.arn | rename userIdentity.arn as arn | inputlookup append=t previously_seen_ec2_launches_by_user.csv | stats min(firstTime) as firstTime, max(lastTime) as lastTime by arn | outputlookup previously_seen_ec2_launches_by_user.csv | eval newUser=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newUser=1 | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename arn as userIdentity.arn | table userIdentity.arn] | rename requestParameters.instanceType as instanceType, responseElements.instancesSet.items{}.instanceId as dest, userIdentity.arn as user | table _time, user, dest, instanceType"
"ESCU Searches","DA-ESS-ContentUpdate","Email Attachments With Lots Of Spaces","Attackers often use spaces as a means to obfuscate an attachment's file extension. This search looks for messages with email attachments that have many spaces within the file names.",Email,,network,,,,,,,,," tstats `security_content_summariesonly` count values(All_Email.recipient) as recipient_address min(_time) as firstTime max(_time) as lastTime from datamodel=Email where All_Email.file_name=""*"" by All_Email.src_user, All_Email.file_name All_Email.message_id | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(""All_Email"")` | eval space_ratio = (mvcount(split(file_name,"" ""))-1)/len(file_name) | search space_ratio >= 0.1 |  rex field=recipient_address ""(?<recipient_user>.*)@"""
"ESCU Searches","DA-ESS-ContentUpdate","Email files written outside of the Outlook directory","The search looks at the change-analysis data model and detects email files created outside the normal Outlook directory.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Filesystem.file_path) as file_path min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where (Filesystem.file_name=*.pst OR Filesystem.file_name=*.ost) Filesystem.file_path != ""C:\\Users\\*\\My Documents\\Outlook Files\\*""  Filesystem.file_path!=""C:\\Users\\*\\AppData\\Local\\Microsoft\\Outlook*"" by Filesystem.action Filesystem.process_id Filesystem.file_name Filesystem.dest | `drop_dm_object_name(""Filesystem"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`| `email_files_not_in_outlook_directory_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Email servers sending high volume traffic to hosts","This search looks for an increase of data transfers from your email server to your clients. This could be indicative of a malicious actor collecting data using your email server.","Network_Traffic",,network,,,,,,,,," tstats `security_content_summariesonly` sum(All_Traffic.bytes_out) as bytes_out from datamodel=Network_Traffic where All_Traffic.src_category=email_server by All_Traffic.dest_ip _time span=1d | `drop_dm_object_name(""All_Traffic"")` | eventstats avg(bytes_out) as avg_bytes_out stdev(bytes_out) as stdev_bytes_out | eventstats count as num_data_samples avg(eval(if(_time < relative_time(now(), ""@d""), bytes_out, null))) as per_source_avg_bytes_out stdev(eval(if(_time < relative_time(now(), ""@d""), bytes_out, null))) as per_source_stdev_bytes_out by dest_ip | eval minimum_data_samples = 4, deviation_threshold = 3 | where num_data_samples >= minimum_data_samples AND bytes_out > (avg_bytes_out + (deviation_threshold * stdev_bytes_out)) AND bytes_out > (per_source_avg_bytes_out + (deviation_threshold * per_source_stdev_bytes_out)) AND _time >= relative_time(now(), ""@d"") | eval num_standard_deviations_away_from_server_average = round(abs(bytes_out - avg_bytes_out) / stdev_bytes_out, 2), num_standard_deviations_away_from_client_average = round(abs(bytes_out - per_source_avg_bytes_out) / per_source_stdev_bytes_out, 2) | table dest_ip, _time, bytes_out, avg_bytes_out, per_source_avg_bytes_out, num_standard_deviations_away_from_server_average, num_standard_deviations_away_from_client_average"
"ESCU Searches","DA-ESS-ContentUpdate","Excessive DNS Failures","This search identifies DNS query failures by counting the number of DNS responses that do not indicate success and trigger on more than 50 occurrences.","Network_Resolution",,network,,,,,,,,," tstats `security_content_summariesonly` count values(""DNS.query"") as queries from datamodel=Network_Resolution where nodename=DNS ""DNS.reply_code""!=""No Error"" ""DNS.reply_code""!=""NoError"" DNS.reply_code!=""unknown"" NOT ""DNS.query""=""*.arpa"" ""DNS.query""=""*.*"" by ""DNS.src"",""DNS.query""| `drop_dm_object_name(""DNS"")`| lookup cim_corporate_web_domain_lookup domain as query OUTPUT domain| where isnull(domain)| lookup update=true alexa_lookup_by_str domain as query OUTPUT rank| where isnull(rank)| stats sum(count) as count mode(queries) as queries by src| `get_asset(src)`| where count>50"
"ESCU Searches","DA-ESS-ContentUpdate","Execution of File With Spaces Before Extension","This search looks for processes launched from files with at least five spaces in the name before the extension. This is typically done to obfuscate the file extension by pushing it outside of the default view.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process_path) as process_path min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*     .*"" by Processes.dest Processes.user Processes.process Processes.process_name | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `drop_dm_object_name(Processes)`"
"ESCU Searches","DA-ESS-ContentUpdate","Execution of File with Multiple Extensions","This search looks for processes launched from files that have double extensions in the file name. This is typically done to obscure the ""real"" file extension and make it appear as though the file being accessed is a data file as opposed to executable content.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = *.doc.exe OR Processes.process = *.htm.exe OR Processes.process = *.html.exe OR Processes.process = *.txt.exe OR Processes.process = *.pdf.exe OR Processes.process = *.doc.exe by Processes.dest Processes.user Processes.process Processes.parent_process | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(Processes)`"
"ESCU Searches","DA-ESS-ContentUpdate","Extended Period Without Successful Netbackup Backups","This search returns a list of hosts that have not successfully completed a backup in over a week.",,,endpoint,,,,,,,,,"search sourcetype=""netbackup_logs"" MESSAGE=""Disk/Partition backup completed successfully."" | stats latest(_time) as latestTime by COMPUTERNAME | `security_content_ctime(latestTime)` | rename COMPUTERNAME as dest | eval isOutlier=if(latestTime <= relative_time(now(), ""-7d@d""), 1, 0) | search isOutlier=1 | table latestTime, dest"
"ESCU Searches","DA-ESS-ContentUpdate","File with Samsam Extension","The search looks for file writes with extensions consistent with a SamSam ransomware attack.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`| rex field=file_name ""(?<file_extension>\.[^\.]+)$"" | search file_extension=.stubbin OR file_extension=.berkshire OR file_extension=.satoshi OR file_extension=.sophos OR file_extension=.keyxml"
"ESCU Searches","DA-ESS-ContentUpdate","First Time Seen Running Windows Service","This search looks for the first time a Windows service is seen running in your environment.",,,endpoint,,,,,,,,,"search eventtype=wineventlog_system signature_id=7036 | rename param1 as service_name | rename param2 as action | search action=""running"" [ search eventtype=wineventlog_system signature_id=7036 | rename param1 as service_name | rename param2 as action | search action=""running"" | stats earliest(_time) as firstTime, latest(_time) as lastTime by service_name | inputlookup append=t previously_seen_running_windows_services | stats min(firstTime) as firstTime max(lastTime) as lastTime by service_name | outputlookup previously_seen_running_windows_services| eval serviceStatus=if(firstTime >= relative_time(now(),""-60m@m""), ""First time seen Windows service"",""Previously seen Windows service"") | where serviceStatus=""First time seen Windows service""| `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | table service_name]| table _time dest service_name"
"ESCU Searches","DA-ESS-ContentUpdate","First time seen command line argument","This search looks for command-line arguments that use a `/c` parameter to execute a command that has not previously been seen.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = cmd.exe Processes.process = ""* /c *"" by Processes.process Processes.process_name Processes.parent_process_name Processes.dest| `drop_dm_object_name(Processes)`| `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | search [| tstats `security_content_summariesonly` earliest(_time) as firstTime latest(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = cmd.exe Processes.process = ""* /c *"" by Processes.process | `drop_dm_object_name(Processes)` | inputlookup append=t previously_seen_cmd_line_arguments | stats min(firstTime) as firstTime, max(lastTime) as lastTime by process | outputlookup previously_seen_cmd_line_arguments | eval newCmdLineArgument=if(firstTime >= relative_time(now(), ""-70m@m""), 1, 0) | where newCmdLineArgument=1 | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | table process] | `first_time_seen_cmd_line_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","GCP GCR container uploaded","This search show information on uploaded containers including source user account action bucket name event name http user agent message and destination path.","Cloud_Infrastructure",,threat,,,,,,,,,"tstats count min(_time) as firstTime max(_time) as lastTime  FROM datamodel=Cloud_Infrastructure.Storage where Storage.event_name=storage.objects.create by Storage.src_user Storage.account Storage.action Storage.bucket_name Storage.event_name Storage.http_user_agent Storage.msg Storage.object_path | `drop_dm_object_name(""Storage"")`  | `container_implant_gcp_detection_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","GCP Kubernetes cluster scan detection","This search provides information of unauthenticated requests via user agent and authentication data against Kubernetes cluster",,,threat,,,,,,,,,"search sourcetype=""google:gcp:pubsub:message"" data.protoPayload.requestMetadata.callerIp!=127.0.0.1 data.protoPayload.requestMetadata.callerIp!=::1 ""data.labels.authorization.k8s.io/decision""=forbid ""data.protoPayload.status.message""=PERMISSION_DENIED data.protoPayload.authenticationInfo.principalEmail=""system:anonymous"" | rename data.protoPayload.requestMetadata.callerIp as src_ip | stats count min(_time) as firstTime max(_time) as lastTime values(data.protoPayload.methodName) as method_name values(data.protoPayload.resourceName) as resource_name values(data.protoPayload.requestMetadata.callerSuppliedUserAgent) as http_user_agent by src_ip data.resource.labels.cluster_name | rename data.resource.labels.cluster_name as cluster_name| `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`  | `kubernetes_gcp_scan_fingerprint_detection`"
"ESCU Searches","DA-ESS-ContentUpdate","Hiding Files And Directories With Attrib.exe","Attackers leverage an existing Windows binary attrib.exe to mark specific as hidden by using specific flags so that the victim does not see the file.  The search looks for specific command-line arguments to detect the use of attrib.exe to hide files.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=attrib.exe (Processes.process=*+h*) by Processes.parent_process Processes.process_name Processes.user | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`| `attrib_to_hide_files_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Hosts receiving high volume of network traffic from email server","This search looks for an increase of data transfers from your email server to your clients. This could be indicative of a malicious actor collecting data using your email server.","Network_Traffic",,network,,,,,,,,," tstats `security_content_summariesonly` sum(All_Traffic.bytes_in) as bytes_in from datamodel=Network_Traffic where All_Traffic.dest_category=email_server by All_Traffic.src_ip _time span=1d | `drop_dm_object_name(""All_Traffic"")` | eventstats avg(bytes_in) as avg_bytes_in stdev(bytes_in) as stdev_bytes_in | eventstats count as num_data_samples avg(eval(if(_time < relative_time(now(), ""@d""), bytes_in, null))) as per_source_avg_bytes_in stdev(eval(if(_time < relative_time(now(), ""@d""), bytes_in, null))) as per_source_stdev_bytes_in by src_ip | eval minimum_data_samples = 4, deviation_threshold = 3 | where num_data_samples >= minimum_data_samples AND bytes_in > (avg_bytes_in + (deviation_threshold * stdev_bytes_in)) AND bytes_in > (per_source_avg_bytes_in + (deviation_threshold * per_source_stdev_bytes_in)) AND _time >= relative_time(now(), ""@d"") | eval num_standard_deviations_away_from_server_average = round(abs(bytes_in - avg_bytes_in) / stdev_bytes_in, 2), num_standard_deviations_away_from_client_average = round(abs(bytes_in - per_source_avg_bytes_in) / per_source_stdev_bytes_in, 2) | table src_ip, _time, bytes_in, avg_bytes_in, per_source_avg_bytes_in, num_standard_deviations_away_from_server_average, num_standard_deviations_away_from_client_average"
"ESCU Searches","DA-ESS-ContentUpdate","Identify New User Accounts","This detection search will help profile user accounts in your environment by identifying newly created accounts that have been added to your network in the past week.","Identity_Management",,access,,,,,,,,," from datamodel Identity_Management.All_Identities  | eval empStatus=case((now()-startDate)<604800, ""Accounts created in last week"") | search empStatus=""Accounts created in last week""| `security_content_ctime(endDate)` | `security_content_ctime(startDate)`| table identity empStatus endDate startDate"
"ESCU Searches","DA-ESS-ContentUpdate","Large Volume of DNS ANY Queries","The search is used to identify attempts to use your DNS Infrastructure for DDoS purposes via a DNS amplification attack leveraging ANY queries.","Network_Resolution",,network,,,,,,,,," tstats `security_content_summariesonly` count from datamodel=Network_Resolution where nodename=DNS ""DNS.message_type""=""QUERY"" ""DNS.record_type""=""ANY"" by ""DNS.dest"" | `drop_dm_object_name(""DNS"")` | where count>200"
"ESCU Searches","DA-ESS-ContentUpdate","MacOS - Re-opened Applications","This search looks for processes referencing the plist files that determine which applications are re-opened when a user reboots their machine.",Endpoint,,threat,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*com.apple.loginwindow*"" by Processes.user Processes.process_name Processes.parent_process_name Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Malicious PowerShell Process - Connect To Internet With Hidden Window","This search looks for PowerShell processes started with parameters to modify the execution policy of the run run in a hidden window and connect to the Internet. This combination of command-line options is suspicious because it's overriding the default PowerShell execution policy attempts to hide its activity from the user and connects to the Internet.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | search process=""*-Exec*"" process=""*-WindowStyle*"" process=""*hidden*"" process=""*New-Object*"" process=""*System.Net.WebClient*"""
"ESCU Searches","DA-ESS-ContentUpdate","Malicious PowerShell Process - Encoded Command","This search looks for PowerShell processes that have encoded the script within the command-line. Malware has been seen using this parameter as it obfuscates the code and makes it relatively easy to pass a script on the command-line.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | search process=*-EncodedCommand* OR  process=*-enc*"
"ESCU Searches","DA-ESS-ContentUpdate","Malicious PowerShell Process - Execution Policy Bypass","This search looks for PowerShell processes started with parameters used to bypass the local execution policy for scripts. These parameters are often observed in attacks leveraging PowerShell scripts as they override the default PowerShell execution policy.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` values(Processes.process_id) as process_id, values(Processes.parent_process_id) as parent_process_id values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe AND (Processes.process=""* -ex*"" OR Processes.process=""* bypass *"") by Processes.process_id, Processes.user, Processes.dest | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Malicious PowerShell Process - Multiple Suspicious Command-Line Arguments","This search looks for PowerShell processes started with a base64 encoded command-line passed to it with parameters to modify the execution policy for the process and those that prevent the display of an interactive prompt to the user. This combination of command-line options is suspicious because it overrides the default PowerShell execution policy attempts to hide itself from the user and passes an encoded script to be run on the command-line.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| search (process=*-EncodedCommand* OR process=*-enc*) process=*-Exec* AND process=*-NonI*"
"ESCU Searches","DA-ESS-ContentUpdate","Malicious PowerShell Process With Obfuscation Techniques","This search looks for PowerShell processes launched with arguments that have characters indicative of obfuscation on the command-line.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest Processes.process | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| eval num_obfuscation = (mvcount(split(process, ""`""))-1) + (mvcount(split(process, ""^""))-1) | `malicious_powershell_process_obfuscation_techniques_output_filter` | search num_obfuscation > 0"
"ESCU Searches","DA-ESS-ContentUpdate","Monitor DNS For Brand Abuse","This search looks for DNS requests for faux domains similar to the domains that you want to have monitored for abuse.","Network_Resolution",,network,,,,,,,,," tstats `security_content_summariesonly` values(DNS.answer) as IPs min(_time) as firstTime from datamodel=Network_Resolution by DNS.src, DNS.query | `drop_dm_object_name(""DNS"")` | `security_content_ctime(firstTime)`| `brand_abuse_dns`"
"ESCU Searches","DA-ESS-ContentUpdate","Monitor Email For Brand Abuse","This search looks for emails claiming to be sent from a domain similar to one that you want to have monitored for abuse.",Email,,network,,,,,,,,," tstats `security_content_summariesonly` values(All_Email.recipient) as recipients, min(_time) as firstTime, max(_time) as lastTime from datamodel=Email by All_Email.src_user, All_Email.message_id | `drop_dm_object_name(""All_Email"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | eval temp=split(src_user, ""@"") | eval email_domain=mvindex(temp, 1) | lookup update=true brandMonitoring_lookup domain as email_domain OUTPUT domain_abuse | search domain_abuse=true | table message_id, src_user, email_domain, recipients, firstTime, lastTime"
"ESCU Searches","DA-ESS-ContentUpdate","Monitor Registry Keys for Print Monitors","This search looks for registry activity associated with modifications to the registry key `HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors`. In this scenario an attacker can load an arbitrary .dll into the print-monitor registry by giving the full path name to the after.dll. The system will execute the .dll with elevated (SYSTEM) permissions and will persist after reboot.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.action=modified AND Registry.registry_path=""*CurrentControlSet\\Control\\Print\\Monitors*"" by Registry.dest, Registry.registry_key_name Registry.status Registry.user Registry.registry_path Registry.action | `drop_dm_object_name(Registry)`"
"ESCU Searches","DA-ESS-ContentUpdate","Monitor Web Traffic For Brand Abuse","This search looks for Web requests to faux domains similar to the one that you want to have monitored for abuse.",Web,,network,,,,,,,,," tstats `security_content_summariesonly` values(Web.url) as urls min(_time) as firstTime from datamodel=Web by Web.src | `drop_dm_object_name(""Web"")` | `security_content_ctime(firstTime)` | `brand_abuse_web`"
"ESCU Searches","DA-ESS-ContentUpdate","Multiple Okta Users With Invalid Credentails From The Same IP","This search detects Okta login failures due to bad credentials for multiple users originating from the same ip address.",,,access,,,,,,,,,"search eventtype=okta_log outcome.reason=INVALID_CREDENTIALS | rename client.geographicalContext.country as country, client.geographicalContext.state as state, client.geographicalContext.city as city | stats min(_time) as firstTime max(_time) as lastTime dc(user) as distinct_users values(user) as users by src_ip, displayMessage, outcome.reason, country, state, city  | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` |  search distinct_users > 5| `okta_multiple_users_with_auth_failures_from_ip_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","New container uploaded to AWS ECR","This searches show information on uploaded containers including source user image id source IP user type http user agent region first time last time of operation (PutImage). These searches are based on Cloud Infrastructure Data Model.","Cloud_Infrastructure",,threat,,,,,,,,," tstats count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Cloud_Infrastructure.Compute where Compute.user_type!=""AssumeRole"" AND Compute.http_user_agent=""AWS Internal"" AND Compute.event_name=""PutImage"" by Compute.image_id Compute.src_user Compute.src Compute.region Compute.msg Compute.user_type | `drop_dm_object_name(""Compute"")` | `container_implant_aws_detection_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","No Windows Updates in a time frame","This search looks for Windows endpoints that have not generated an event indicating a successful Windows update in the last 60 days. Windows updates are typically released monthly and applied shortly thereafter. An endpoint that has not successfully applied an update in this time frame indicates the endpoint is not regularly being patched for some reason.",Updates,,endpoint,,,,,,,,," tstats `security_content_summariesonly` max(_time) as lastTime from datamodel=Updates where Updates.status=Installed Updates.vendor_product=""Microsoft Windows"" by Updates.dest Updates.status Updates.vendor_product | rename Updates.dest as Host | rename Updates.status as ""Update Status"" | rename Updates.vendor_product as Product | eval isOutlier=if(lastTime <= relative_time(now(), ""-60d@d""), 1, 0)  | `security_content_ctime(lastTime)`  | search isOutlier=1 | rename lastTime as ""Last Update Time"", | table Host, ""Update Status"", Product, ""Last Update Time"""
"ESCU Searches","DA-ESS-ContentUpdate","Okta Account Lockout Events","Detect Okta user lockout events",,,access,,,,,,,,,"search eventtype=okta_log displayMessage=""Max sign in attempts exceeded"" | rename client.geographicalContext.country as country, client.geographicalContext.state as state, client.geographicalContext.city as city | table _time, user, country, state, city, src_ip |`okta_user_lockouts_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Okta Failed SSO Attempts","Detect failed Okta SSO events",,,access,,,,,,,,,"search eventtype=okta_log displayMessage=""User attempted unauthorized access to app"" | stats  min(_time) as firstTime max(_time) as lastTime values(app) as Apps count by user, result ,displayMessage, src_ip | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`|`okta_failed_sso_attempt_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Okta User Logins From Multiple Cities","This search detects logins from the same user from different states in a 24 hour period.",,,access,,,,,,,,,"search eventtype=okta_log displayMessage=""User login to Okta"" client.geographicalContext.city!=null | stats min(_time) as firstTime max(_time) as lastTime dc(client.geographicalContext.city) as locations values(client.geographicalContext.city) as cities values(client.geographicalContext.state) as states by user | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` |`okta_user_logins_from_multiple_cities_filter`| search locations > 1"
"ESCU Searches","DA-ESS-ContentUpdate","Open Redirect in Splunk Web","This search allows you to look for evidence of exploitation for CVE-2016-4859 the Splunk Open Redirect Vulnerability.",,,network,,,,,,,,,"search index=_internal sourcetype=splunk_web_access return_to=""/%09/*"""
"ESCU Searches","DA-ESS-ContentUpdate","Osquery pack - ColdRoot detection","This search looks for ColdRoot events from the osx-attacks osquery pack.",Alerts,,threat,,,,,,,,," from datamodel Alerts.Alerts | search app=osquery:results (name=pack_osx-attacks_OSX_ColdRoot_RAT_Launchd OR name=pack_osx-attacks_OSX_ColdRoot_RAT_Files) | rename columns.path as path | bucket _time span=30s | stats count(path) by _time, host, user, path"
"ESCU Searches","DA-ESS-ContentUpdate","Overwriting Accessibility Binaries","Microsoft Windows contains accessibility features that can be launched with a key combination before a user has logged in. An adversary can modify or replace these programs so they can get a command prompt or backdoor without logging in to the system. This search looks for modifications to these binaries.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem where (Filesystem.file_path=*\\Windows\\System32\\sethc.exe* OR Filesystem.file_path=*\\Windows\\System32\\utilman.exe* OR Filesystem.file_path=*\\Windows\\System32\\osk.exe* OR Filesystem.file_path=*\\Windows\\System32\\Magnify.exe* OR Filesystem.file_path=*\\Windows\\System32\\Narrator.exe* OR Filesystem.file_path=*\\Windows\\System32\\DisplaySwitch.exe* OR Filesystem.file_path=*\\Windows\\System32\\AtBroker.exe*) by Filesystem.file_name Filesystem.dest | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Process Execution via WMI","This search looks for processes launched via WMI.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.parent_process_name = *WmiPrvSE.exe by Processes.user Processes.dest Processes.process_name  | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| `wmi_process_launch_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Processes Tapping Keyboard Events","This search looks for processes in an MacOS system that is tapping keyboard events in MacOS and essentially monitoring all keystrokes made by a user. This is a common technique used by RATs to log keystrokes from a victim although it can also be used by legitimate processes like Siri to react on human input",Alerts,,threat,,,,,,,,," from datamodel Alerts.Alerts | search app=osquery:results name=pack_osx-attacks_Keyboard_Event_Taps | rename columns.cmdline as cmd, columns.name as process_name, columns.pid as process_id| dedup host,process_name | table host,process_name, cmd, process_id"
"ESCU Searches","DA-ESS-ContentUpdate","Processes created by netsh","This search looks for processes launching netsh.exe to execute various commands via the netsh command-line utility. Netsh.exe is a command-line scripting utility that allows you to either locally or remotely display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper .dll when netsh.exe is executed. In this search we are looking for processes spawned by netsh.exe that are executing commands via the command line.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process=""*C:\\Windows\\System32\\netsh.exe*"" by Processes.user Processes.dest Processes.parent_process Processes.parent_process_name Processes.process_name | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Processes launching netsh","This search looks for processes launching netsh.exe. Netsh is a command-line scripting utility that allows you to either locally or remotely display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed. In this search we are looking for processes spawned by netsh.exe and executing commands via the command line.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=netsh.exe by Processes.parent_process Processes.process_name Processes.user Processes.dest | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Prohibited Network Traffic Allowed","This search looks for network traffic defined by port and transport layer protocol in the Enterprise Security lookup table ""lookup_interesting_ports"" that is marked as prohibited and has an associated 'allow' action in the Network_Traffic data model. This could be indicative of a misconfigured network device.","Network_Traffic",,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.action = allowed by All_Traffic.src_ip All_Traffic.dest_ip All_Traffic.dest_port All_Traffic.action | lookup update=true interesting_ports_lookup dest_port as All_Traffic.dest_port OUTPUT app is_prohibited note transport | search is_prohibited=true | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(""All_Traffic"")`"
"ESCU Searches","DA-ESS-ContentUpdate","Prohibited Software On Endpoint","This search looks for applications on the endpoint that you have marked as prohibited.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest Processes.user Processes.process_name | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `drop_dm_object_name(Processes)` | `prohibited_softwares`"
"ESCU Searches","DA-ESS-ContentUpdate","Protocol or Port Mismatch","This search looks for network traffic on common ports where a higher layer protocol does not match the port that is being used. For example this search should identify cases where protocols other than HTTP are running on TCP port 80. This can be used by attackers to circumvent firewall restrictions or as an attempt to hide malicious communications over ports and protocols that are typically allowed and not well inspected.","Network_Traffic",,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where (All_Traffic.app=dns NOT All_Traffic.dest_port=53) OR ((All_Traffic.app=web-browsing OR All_Traffic.app=http) NOT (All_Traffic.dest_port=80 OR All_Traffic.dest_port=8080 OR All_Traffic.dest_port=8000)) OR (All_Traffic.app=ssl NOT (All_Traffic.dest_port=443 OR All_Traffic.dest_port=8443)) OR (All_Traffic.app=smtp NOT All_Traffic.dest_port=25) by All_Traffic.src_ip, All_Traffic.dest_ip, All_Traffic.app, All_Traffic.dest_port |`security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(""All_Traffic"")`"
"ESCU Searches","DA-ESS-ContentUpdate","Protocols passing authentication in cleartext","This search looks for cleartext protocols at risk of leaking credentials. Currently this consists of legacy protocols such as telnet POP3 IMAP and non-anonymous FTP sessions. While some of these protocols can be used over SSL they typically run on different assigned ports in those cases.","Network_Traffic",,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.protocol=""tcp"" AND (All_Traffic.dest_port=""23"" OR All_Traffic.dest_port=""143"" OR All_Traffic.dest_port=""110"" OR (All_Traffic.dest_port=""21"" AND All_Traffic.user != ""anonymous"")) groupby All_Traffic.user All_Traffic.src All_Traffic.dest All_Traffic.dest_port | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(""All_Traffic"")`"
"ESCU Searches","DA-ESS-ContentUpdate","Reg.exe Manipulating Windows Services Registry Keys","The search looks for reg.exe modifying registry keys that define Windows services and their configurations.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name FROM datamodel=Endpoint.Processes where Processes.process_name = reg.exe by Processes.process_id Processes.dest | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | join [| tstats `security_content_summariesonly` values(Registry.registry_path) as registry_path count  FROM datamodel=Endpoint.Registry where Registry.registry_path=""*\\services\\*"" by Registry.process_id Registry.dest | `drop_dm_object_name(""Registry"")` | table process_id dest registry_path]"
"ESCU Searches","DA-ESS-ContentUpdate","Reg.exe used to hide files/directories via registry keys","The search looks for command-line arguments used to hide a file or directory using the reg add command.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = reg.exe Processes.process=""*add*"" Processes.process=""*Hidden*"" Processes.process=""*REG_DWORD*"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user| `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` |`security_content_ctime(lastTime)`| regex process = ""(/d\s+2)"""
"ESCU Searches","DA-ESS-ContentUpdate","Registry Keys Used For Persistence","The search looks for modifications to registry keys that can be used to launch an application or service at system startup.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Registry.registry_key_name) as registry_key_name values(Registry.registry_path) as registry_path min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where (Registry.registry_path=*currentversion\\run* OR Registry.registry_path=*currentVersion\\Windows\\Appinit_Dlls* OR Registry.registry_path=CurrentVersion\\Winlogon\\Shell* OR Registry.registry_path=*CurrentVersion\\Winlogon\\Userinit* OR Registry.registry_path=*CurrentVersion\\Winlogon\\VmApplet* OR Registry.registry_path=*currentversion\\policies\\explorer\\run* OR Registry.registry_path=*currentversion\\runservices* OR Registry.registry_path=*\\CurrentControlSet\\Control\\Lsa\\* OR Registry.registry_path=""*Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options*"" OR Registry.registry_path=HKLM\\SOFTWARE\\Microsoft\\Netsh\\*) by Registry.dest , Registry.status, Registry.user | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `drop_dm_object_name(Registry)`"
"ESCU Searches","DA-ESS-ContentUpdate","Registry Keys Used For Privilege Escalation","This search looks for modifications to registry keys that can be used to elevate privileges. The registry keys under ""Image File Execution Options"" are used to intercept calls to an executable and can be used to attach malicious binaries to benign system binaries.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Registry.registry_key_name) as registry_key_name values(Registry.registry_path) as registry_path min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where (Registry.registry_path=""*Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options*"") AND (Registry.registry_key_name=GlobalFlag OR Registry.registry_key_name=Debugger) by Registry.dest  Registry.user | `security_content_ctime(lastTime)`  | `security_content_ctime(firstTime)` | `drop_dm_object_name(Registry)`"
"ESCU Searches","DA-ESS-ContentUpdate","Registry Keys for Creating SHIM Databases","This search looks for registry activity associated with application compatibility shims which can be leveraged by attackers for various nefarious purposes.","Change_Analysis",,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Change_Analysis.All_Changes where All_Changes.object_category=registry AND (All_Changes.object_path=""*CurrentVersion\\AppCompatFlags\\Custom*"" OR All_Changes.object_path=""*CurrentVersion\\AppCompatFlags\\InstalledSDB*"") by All_Changes.dest, All_Changes.command, All_Changes.user, All_Changes.object, All_Changes.object_path | `drop_dm_object_name(""All_Changes"")`"
"ESCU Searches","DA-ESS-ContentUpdate","Remote Desktop Network Bruteforce","This search looks for RDP application network traffic and filters any source/destination pair generating more than twice the standard deviation of the average traffic.","Network_Traffic",,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.app=rdp by All_Traffic.src All_Traffic.dest All_Traffic.dest_port | eventstats stdev(count) AS stdev avg(count) AS avg p50(count) AS p50 | where count>(avg + stdev*2) | rename All_Traffic.src AS src All_Traffic.dest AS dest | table firstTime lastTime src dest count avg p50 stdev"
"ESCU Searches","DA-ESS-ContentUpdate","Remote Desktop Network Traffic","This search looks for network traffic on TCP/3389 the default port used by remote desktop. While remote desktop traffic is not uncommon on a network it is usually associated with known hosts. This search allows for whitelisting both source and destination hosts to remove them from the output of the search so you can focus on the uncommon uses of remote desktop on your network.","Network_Traffic",,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.dest_port=3389 AND All_Traffic.dest_category!=common_rdp_destination AND All_Traffic.src_category!=common_rdp_source by All_Traffic.src All_Traffic.dest All_Traffic.dest_port | `drop_dm_object_name(""All_Traffic"")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `remote_desktop_network_traffic_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Remote Desktop Process Running On System","This search looks for the remote desktop process mstsc.exe running on systems upon which it doesn't typically run. This is accomplished by filtering out all systems that are noted in the `common_rdp_source category` in the Assets and Identity framework.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=*mstsc.exe AND Processes.dest_category!=common_rdp_source by Processes.dest Processes.user Processes.process | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `drop_dm_object_name(Processes)` | `remote_desktop_process_running_on_system_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Remote Process Instantiation via WMI","This search looks for wmic.exe being launched with parameters to spawn a process on a remote system.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = wmic.exe Processes.process=""*/node*"" Processes.process=""*process*"" Processes.process=""*call*"" Processes.process=""*create*""   by Processes.process_name Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` |`security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Remote Registry Key modifications","This search monitors for remote modifications to registry keys.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Registry.registry_key_name) as registry_key_name values(Registry.registry_path) as registry_path min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where  Registry.registry_path=""\\\\*""  by Registry.dest , Registry.user | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `drop_dm_object_name(Registry)`"
"ESCU Searches","DA-ESS-ContentUpdate","Remote WMI Command Attempt","This search looks for wmic.exe being launched with parameters to operate on remote systems.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wmic.exe  AND Processes.process= */node* by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","RunDLL Loading DLL By Ordinal","This search looks for DLLs under %AppData% being loaded by rundll32.exe that are calling the exported function at ordinal 2. Calling exported functions by ordinal is not as common as calling by exported name. There was a bug fixed in IDAPro on 2016-08-08 that would not display functions without names.  Calling functions by ordinal would overcome the lack of name and make it harder for analyst to reverse engineer.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = rundll32.exe Processes.process=""*AppData*"" Processes.process=""*,#2"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","SMB Traffic Spike","This search looks for spikes in the number of Server Message Block (SMB) traffic connections.","Network_Traffic",,network,,,,,,,,," tstats `security_content_summariesonly` count from datamodel=Network_Traffic where All_Traffic.dest_port=139 OR All_Traffic.dest_port=445 OR All_Traffic.app=smb by _time span=1h, All_Traffic.src | `drop_dm_object_name(""All_Traffic"")` | eventstats max(_time) as maxtime | stats count as num_data_samples max(eval(if(_time >= relative_time(maxtime, ""-70m@m""), count, null))) as count avg(eval(if(_time<relative_time(maxtime, ""-70m@m""), count, null))) as avg stdev(eval(if(_time<relative_time(maxtime, ""-70m@m""), count, null))) as stdev by src | eval upperBound=(avg+stdev*2), isOutlier=if(count > upperBound AND num_data_samples >=50, 1, 0) | where isOutlier=1 | table src count | `smb_traffic_spike_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","SMB Traffic Spike - MLTK","This search uses the Machine Learning Toolkit (MLTK) to identify spikes in the number of Server Message Block (SMB) connections.","Network_Traffic",,network,,,,,,,,," tstats `security_content_summariesonly` count values(All_Traffic.dest_ip) as dest values(All_Traffic.dest_port) as port from datamodel=Network_Traffic where All_Traffic.dest_port=139 OR All_Traffic.dest_port=445 OR All_Traffic.app=smb by _time span=1h, All_Traffic.src | eval HourOfDay=strftime(_time, ""%H"") | eval DayOfWeek=strftime(_time, ""%A"") | `drop_dm_object_name(All_Traffic)` | apply smb_pdfmodel threshold=0.001 | rename ""IsOutlier(count)"" as isOutlier | search isOutlier > 0 | sort -count | table _time src dest port count | `smb_traffic_spike_mltk_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","SQL Injection with Long URLs","This search looks for long URLs that have several SQL commands visible within them.",Web,,network,,,,,,,,," tstats `security_content_summariesonly` count from datamodel=Web where Web.dest_category=web_server AND (Web.url_length > 1024 OR Web.http_user_agent_length > 200) by Web.src Web.dest Web.url Web.url_length Web.http_user_agent | `drop_dm_object_name(""Web"")` | eval num_sql_cmds=mvcount(split(url, ""alter%20table"")) + mvcount(split(url, ""between"")) + mvcount(split(url, ""create%20table"")) + mvcount(split(url, ""create%20database"")) + mvcount(split(url, ""create%20index"")) + mvcount(split(url, ""create%20view"")) + mvcount(split(url, ""delete"")) + mvcount(split(url, ""drop%20database"")) + mvcount(split(url, ""drop%20index"")) + mvcount(split(url, ""drop%20table"")) + mvcount(split(url, ""exists"")) + mvcount(split(url, ""exec"")) + mvcount(split(url, ""group%20by"")) + mvcount(split(url, ""having"")) + mvcount(split(url, ""insert%20into"")) + mvcount(split(url, ""inner%20join"")) + mvcount(split(url, ""left%20join"")) + mvcount(split(url, ""right%20join"")) + mvcount(split(url, ""full%20join"")) + mvcount(split(url, ""select"")) + mvcount(split(url, ""distinct"")) + mvcount(split(url, ""select%20top"")) + mvcount(split(url, ""union"")) + mvcount(split(url, ""xp_cmdshell"")) - 24 | where num_sql_cmds > 3"
"ESCU Searches","DA-ESS-ContentUpdate","Samsam Test File Write","The search looks for a file named ""test.txt"" written to the windows system directory tree which is consistent with Samsam propagation.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_name) as file_name from datamodel=Endpoint.Filesystem where Filesystem.file_path=*\\windows\\system32\\test.txt by Filesystem.file_path | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Sc.exe Manipulating Windows Services","This search looks for arguments to sc.exe indicating the creation or modification of a Windows service.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = sc.exe (Processes.process=""* create *"" OR Processes.process=""* config *"") by Processes.process_name Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Scheduled Task Name Used by Dragonfly Threat Actors","This search looks for flags passed to schtasks.exe on the command-line that indicate a task name associated with the Dragonfly threat actor was created or deleted.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe  by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | search (process=*delete* OR process=*create*) process=*reset* | `dragonfly_schtasks_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Scheduled tasks used in BadRabbit ransomware","This search looks for flags passed to schtasks.exe on the command-line that indicate that task names related to the execution of Bad Rabbit ransomware were created or deleted.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process) as process  from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe (Processes.process= ""*create*""  OR Processes.process= ""*delete*"") by Processes.parent_process Processes.process_name Processes.user | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)` | search (process=*rhaegal* OR process=*drogon* OR *viserion_*)"
"ESCU Searches","DA-ESS-ContentUpdate","Schtasks scheduling job on remote system","This search looks for flags passed to schtasks.exe on the command-line that indicate a job is being scheduled on a remote system.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = schtasks.exe Processes.process=""*/create*"" Processes.process=""* /s *"" by Processes.process_name Processes.process Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `schtasks_scheduling_job_on_remote_system_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Schtasks used for forcing a reboot","This search looks for flags passed to schtasks.exe on the command-line that indicate that a forced reboot of system is scheduled.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = schtasks.exe Processes.process=""*shutdown*"" Processes.process=""*/r*"" Processes.process=""*/f*"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Script Execution via WMI","This search looks for scripts launched via WMI.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_name = ""scrcons.exe"" by Processes.user Processes.dest Processes.process_name  | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| `wmi_script_execution_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Shim Database File Creation","This search looks for shim database files being written to default directories. The sdbinst.exe application is used to install shim database files (.sdb). According to Microsoft a shim is a small library that transparently intercepts an API changes the parameters passed handles the operation itself or redirects the operation elsewhere.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Filesystem.action) values(Filesystem.file_hash) as file_hash values(Filesystem.file_path) as file_path  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path=*Windows\AppPatch\Custom* by Filesystem.file_name Filesystem.dest | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` |`drop_dm_object_name(Filesystem)`"
"ESCU Searches","DA-ESS-ContentUpdate","Shim Database Installation With Suspicious Parameters","This search detects the process execution and arguments required to silently create a shim database.  The sdbinst.exe application is used to install shim database files (.sdb). A shim is a small library which transparently intercepts an API changes the parameters passed handles the operation itself or redirects the operation elsewhere.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = sdbinst.exe Processes.process=""*-p*"" Processes.process=""*-q*"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Short Lived Windows Accounts","This search detects accounts that were created and deleted in a short time period.",Change,,access,,,,,,,,," tstats `security_content_summariesonly` values(All_Changes.result_id) as result_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Change where All_Changes.result_id=4720 OR All_Changes.result_id=4726 by _time span=4h All_Changes.user All_Changes.dest | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `drop_dm_object_name(""All_Changes"")` | search result_id = 4720 result_id=4726 | transaction user connected=false maxspan=240m | table firstTime lastTime count user dest result_id"
"ESCU Searches","DA-ESS-ContentUpdate","Single Letter Process On Endpoint","This search looks for process names that consist only of a single letter.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest, Processes.user, Processes.process, Processes.process_name | `drop_dm_object_name(Processes)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | eval process_name_length = len(process_name), endExe = if(substr(process_name, -4) == "".exe"", 1, 0) | search process_name_length=5 AND endExe=1 | table count, firstTime, lastTime, dest, user, process, process_name"
"ESCU Searches","DA-ESS-ContentUpdate","Spectre and Meltdown Vulnerable Systems","The search is used to detect systems that are still vulnerable to the Spectre and Meltdown vulnerabilities.",Vulnerabilities,,endpoint,,,,,,,,," tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Vulnerabilities where Vulnerabilities.cve =""CVE-2017-5753"" OR Vulnerabilities.cve =""CVE-2017-5715"" OR Vulnerabilities.cve =""CVE-2017-5754"" by Vulnerabilities.dest| `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Spike in File Writes","The search looks for a sharp increase in the number of files written to a particular host",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Filesystem where Filesystem.action=created by _time span=1h, Filesystem.dest | `drop_dm_object_name(Filesystem)` | eventstats max(_time) as maxtime | stats count as num_data_samples max(eval(if(_time >= relative_time(maxtime, ""-1d@d""), count, null))) as ""count"" avg(eval(if(_time<relative_time(maxtime, ""-1d@d""), count,null))) as avg stdev(eval(if(_time<relative_time(maxtime, ""-1d@d""), count, null))) as stdev by ""dest"" | eval upperBound=(avg+stdev*4), isOutlier=if((count > upperBound) AND num_data_samples >=20, 1, 0) | search isOutlier=1 | `file_write_spikes_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Splunk Enterprise Information Disclosure","This search allows you to look for evidence of exploitation for CVE-2018-11409 a Splunk Enterprise Information Disclosure Bug.",,,network,,,,,,,,,"search index=_internal sourcetype=splunkd_ui_access server-info | search clientip!=127.0.0.1 uri_path=""*raw/services/server/info/server-info"" | rename clientip as src_ip, splunk_server as dest | stats earliest(_time) as firstTime, latest(_time) as lastTime, values(uri) as uri, values(useragent) as http_user_agent, values(user) as user by src_ip, dest | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Suspicious Changes to File Associations","This search looks for changes to registry values that control Windows file associations executed by a process that is not typical for legitimate routine changes to this area.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name FROM datamodel=Endpoint.Processes where Processes.process_name!=Explorer.exe AND Processes.process_name!=OpenWith.exe by Processes.process_id Processes.dest | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | join [| tstats `security_content_summariesonly` values(Registry.registry_path) as registry_path count  FROM datamodel=Endpoint.Registry where Registry.registry_path=*\\Explorer\\FileExts* by Registry.process_id Registry.dest | `drop_dm_object_name(""Registry"")` | table process_id dest registry_path]| `change_file_association_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Suspicious Email - UBA Anomaly","This detection looks for emails that are suspicious because of their sender domain rareness or behavior differences. This is an anomaly generated by Splunk User Behavior Analytics (UBA).",UEBA,,threat,,,,,,,,,"tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(All_UEBA_Events.category) as category from datamodel=UEBA where nodename=All_UEBA_Events.UEBA_Anomalies All_UEBA_Events.UEBA_Anomalies.uba_model = ""SuspiciousEmailDetectionModel"" by All_UEBA_Events.description All_UEBA_Events.severity All_UEBA_Events.user All_UEBA_Events.uba_event_type All_UEBA_Events.link All_UEBA_Events.signature All_UEBA_Events.url All_UEBA_Events.UEBA_Anomalies.uba_model | `drop_dm_object_name(All_UEBA_Events)` | `drop_dm_object_name(UEBA_Anomalies)`| `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Suspicious Email Attachment Extensions","This search looks for emails that have attachments with suspicious file extensions.",Email,,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Email where All_Email.file_name=""*"" by All_Email.src_user, All_Email.file_name All_Email.message_id | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(""All_Email"")` | `suspicious_email_attachments` | `suspicious_email_attachments_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Suspicious File Write","The search looks for files created with names that have been linked to malicious activity.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Filesystem.action) as action values(Filesystem.file_path) as file_path min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem by Filesystem.file_name Filesystem.dest | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `drop_dm_object_name(Filesystem)` | `suspicious_writes`"
"ESCU Searches","DA-ESS-ContentUpdate","Suspicious Java Classes","This search looks for suspicious Java classes that are often used to exploit remote command execution in common Java frameworks such as Apache Struts.",,,threat,,,,,,,,,"search sourcetype=""stream:http"" http_method=POST http_content_length>1 | regex form_data=""(?i)java\.lang\.(?:runtime|processbuilder)"" | rename src_ip as src | stats count earliest(_time) as firstTime, latest(_time) as lastTime, values(url) as uri, values(status) as status, values(http_user_agent) as http_user_agent by src, dest | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Suspicious LNK file launching a process","This search looks for a ``*.lnk` file under `C:\User*` or `*\Local\Temp\*` executing a process. This is common behavior used by various spear phishing tools.",Endpoint,,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name=""*.lnk"" AND (Filesystem.file_path=""C:\\Users*"" OR Filesystem.file_path=""*Local\\Temp*"")  by _time span=1h Filesystem.process_id Filesystem.file_name Filesystem.file_path Filesystem.file_hash Filesystem.user | `drop_dm_object_name(Filesystem)` | rename process_id as lnk_pid | join lnk_pid, _time [| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=*  by _time span=1h Processes.parent_process_id Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process | `drop_dm_object_name(Processes)` | rename parent_process_id as lnk_pid | fields _time lnk_pid process_id dest process_name process_path process] | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | table firstTime, lastTime, lnk_pid, process_id, user, dest, file_name, file_path, process_name, process, process_path, file_hash | `lnk_executing_a_process_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Suspicious Reg.exe Process","This search looks for reg.exe being launched from a command prompt not started by the user. When a user launches cmd.exe the parent process is usually explorer.exe. This search filters out those instances.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.parent_process_name != explorer.exe Processes.process_name =cmd.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest Processes.process_id Processes.parent_process_id | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | search [| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.parent_process_name=cmd.exe Processes.process_name= reg.exe by Processes.parent_process_id Processes.dest Processes.process_name | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | rename parent_process_id as process_id |dedup process_id| table process_id dest] | `suspicious_reg_process_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Suspicious wevtutil Usage","The wevtutil.exe application is the windows event log utility. This searches for wevtutil.exe with parameters for clearing the application security setup or system event logs.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = wevtutil.exe Processes.process=""*cl*"" (Processes.process=""*System*"" OR Processes.process=""*Security*"" OR Processes.process=""*Setup*"" OR Processes.process=""*Application*"") by Processes.process_name Processes.parent_process_name Processes.dest Processes.user| `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` |`security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Suspicious writes to System Volume Information","This search detects writes to the 'System Volume Information' folder by something other than the System process.",,,endpoint,,,,,,,,,"search (sourcetype=XmlWinEventLog:Microsoft-Windows-Sysmon/Operational OR tag=process) EventCode=11 process_id!=4 file_path=*System\ Volume\ Information* | stats count min(_time) as firstTime max(_time) as lastTime by dest, Image, file_path | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Suspicious writes to windows Recycle Bin","This search detects writes to the recycle bin by a process other than explorer.exe.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.file_path) as file_path values(Filesystem.file_name) as file_name FROM datamodel=Endpoint.Filesystem where Filesystem.file_path = ""*$Recycle.Bin*"" by Filesystem.process_id Filesystem.dest | `drop_dm_object_name(""Filesystem"")`| search [| tstats `security_content_summariesonly` values(Processes.user) as user values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name FROM datamodel=Endpoint.Processes where Processes.process_name != ""explorer.exe"" by Processes.process_id Processes.dest| `drop_dm_object_name(""Processes"")` | table process_id dest]"
"ESCU Searches","DA-ESS-ContentUpdate","System Processes Run From Unexpected Locations","This search looks for system processes that normally run out of C:\Windows\System32\ or C:\Windows\SysWOW64 that are not run from that location.  This can indicate a malicious process that is trying to hide as a legitimate process.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_path !=""C:\\Windows\\System32*"" Processes.process_path !=""C:\\Windows\\SysWOW64*"" by Processes.user Processes.dest Processes.process_name Processes.process_id Processes.process_path Processes.parent_process_name Processes.process_hash| `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| `is_windows_system_file`"
"ESCU Searches","DA-ESS-ContentUpdate","TOR Traffic","This search looks for network traffic identified as The Onion Router (TOR) a benign anonymity network which can be abused for a variety of nefarious purposes.","Network_Traffic",,network,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic where All_Traffic.app=tor AND All_Traffic.action=allowed by All_Traffic.src_ip All_Traffic.dest_ip All_Traffic.dest_port All_Traffic.action | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `drop_dm_object_name(""All_Traffic"")`"
"ESCU Searches","DA-ESS-ContentUpdate","USN Journal Deletion","The fsutil.exe application is a legitimate Windows utility used to perform tasks related to the file allocation table (FAT) and NTFS file systems. The update sequence number (USN) change journal provides a log of all changes made to the files on the disk. This search looks for fsutil.exe deleting the USN journal.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=fsutil.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | search process=""*deletejournal*"" AND process=""*usn*"""
"ESCU Searches","DA-ESS-ContentUpdate","Uncommon Processes On Endpoint","This search looks for applications on the endpoint that you have marked as uncommon.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest Processes.user Processes.process Processes.process_name | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `drop_dm_object_name(Processes)` | `uncommon_processes` |`uncommon_processes_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Unload Sysmon Filter Driver","Attackers often disable security tools to avoid detection. This search looks for the usage of process `fltMC.exe` to unload a Sysmon Driver that will stop sysmon from collecting the data.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=fltMC.exe AND Processes.process=*unload* AND Processes.process=*SysmonDrv*  by Processes.process_name Processes.process_id Processes.parent_process_name Processes.process Processes.dest Processes.user | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`|`security_content_ctime(lastTime)` |`unload_sysmon_filter_driver_filter`| table firstTime lastTime dest user count process_name process_id parent_process_name process"
"ESCU Searches","DA-ESS-ContentUpdate","Unsigned Image Loaded by LSASS","This search detects loading of unsigned images by LSASS.",,,endpoint,,,,,,,,,"search `sysmon` EventID=7 Image=*lsass.exe Signed=false | stats count min(_time) as firstTime max(_time) as lastTime by Computer, Image, ImageLoaded, Signed, SHA1 | rename Computer as dest | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `unsigned_image_loaded_by_LSASS_filter`"
"ESCU Searches","DA-ESS-ContentUpdate","Unsuccessful Netbackup backups","This search gives you the hosts where a backup was attempted and then failed.",,,endpoint,,,,,,,,,"search sourcetype=""netbackup_logs"" | stats latest(_time) as latestTime by COMPUTERNAME, MESSAGE | search MESSAGE=""An error occurred, failed to backup."" | `security_content_ctime(latestTime)` | rename COMPUTERNAME as dest, MESSAGE as signature | table latestTime, dest, signature"
"ESCU Searches","DA-ESS-ContentUpdate","Unusually Long Command Line","Command lines that are extremely long may be indicative of malicious activity on your hosts.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes by Processes.user Processes.dest Processes.process_name Processes.process | `drop_dm_object_name(""Processes"")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`|  eval processlen=len(process) | eventstats stdev(processlen) as stdev, avg(processlen) as avg by dest | stats max(processlen) as maxlen, values(stdev) as stdevperhost, values(avg) as avgperhost by dest, user, process_name, process| `unusually_long_commandlines_filter`| eval threshold = 10 | where maxlen > ((threshold*stdevperhost) + avgperhost)"
"ESCU Searches","DA-ESS-ContentUpdate","Unusually Long Command Line - MLTK","Command lines that are extremely long may be indicative of malicious activity on your hosts. This search leverages the Machine Learning Toolkit (MLTK) to help identify command lines with lengths that are unusual for a given user.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes by Processes.user Processes.dest Processes.process_name Processes.process | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| eval processlen=len(process) | search user!=unknown | apply cmdline_pdfmodel threshold=0.01 | rename ""IsOutlier(processlen)"" as isOutlier | search isOutlier > 0 | table firstTime lastTime user dest process_name process processlen count"
"ESCU Searches","DA-ESS-ContentUpdate","Unusually Long Content-Type Length","This search looks for unusually long strings in the Content-Type http header that the client sends the server.",,,network,,,,,,,,,"search sourcetype=stream:http | eval cs_content_type_length = len(cs_content_type) | where cs_content_type_length > 100 | table endtime src_ip dest_ip cs_content_type_length cs_content_type url"
"ESCU Searches","DA-ESS-ContentUpdate","WMI Permanent Event Subscription","This search looks for the creation of WMI permanent event subscriptions.",,,endpoint,,,,,,,,,"search sourcetype=""wineventlog:microsoft-windows-wmi-activity/operational"" EventCode=5861 Binding | rex field=Message ""Consumer =\s+(?<consumer>[^;|^$]+)"" | search consumer!=""NTEventLogEventConsumer=\""SCM Event Log Consumer\"""" | stats count min(_time) as firstTime max(_time) as lastTime by ComputerName, consumer, Message | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | rename ComputerName as dest"
"ESCU Searches","DA-ESS-ContentUpdate","WMI Permanent Event Subscription - Sysmon","This search looks for the creation of WMI permanent event subscriptions.",,,endpoint,,,,,,,,,"search sourcetype=""XmlWinEventLog:Microsoft-Windows-Sysmon/Operational"" EventCode=21 | rename host as dest | table _time, dest, user, Operation, EventType, Query, Consumer, Filter"
"ESCU Searches","DA-ESS-ContentUpdate","WMI Temporary Event Subscription","This search looks for the creation of WMI temporary event subscriptions.",,,endpoint,,,,,,,,,"search sourcetype=""wineventlog:microsoft-windows-wmi-activity/operational"" EventCode=5860 Temporary | rex field=Message ""NotificationQuery =\s+(?<query>[^;|^$]+)"" | search query!=""SELECT * FROM Win32_ProcessStartTrace WHERE ProcessName = 'wsmprovhost.exe'"" AND query!=""SELECT * FROM __InstanceOperationEvent WHERE TargetInstance ISA 'AntiVirusProduct' OR TargetInstance ISA 'FirewallProduct' OR TargetInstance ISA 'AntiSpywareProduct'"" | stats count min(_time) as firstTime max(_time) as lastTime by ComputerName, query  | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Web Fraud - Account Harvesting","This search is used to identify the creation of multiple user accounts using the same email domain name.",,,threat,,,,,,,,,"search sourcetype=stream:http http_content_type=text* uri=""/magento2/customer/account/loginPost/"" | rex field=cookie ""form_key=(?<SessionID>\w+)"" | rex field=form_data ""login\[username\]=(?<Username>[^&|^$]+)"" | search Username=* | rex field=Username ""@(?<email_domain>.*)""|stats dc(Username) as UniqueUsernames list(Username) as src_user by email_domain|where UniqueUsernames> 25"
"ESCU Searches","DA-ESS-ContentUpdate","Web Fraud - Anomalous User Clickspeed","This search is used to examine web sessions to identify those where the clicks are occurring too quickly for a human or are occurring with a near-perfect cadence (high periodicity or low standard deviation) resembling a script driven session.",,,threat,,,,,,,,,"search sourcetype=stream:http http_content_type=text* | rex field=cookie ""form_key=(?<session_id>\w+)"" | streamstats window=2 current=1 range(_time) as TimeDelta by session_id | where TimeDelta>0 |stats count stdev(TimeDelta) as ClickSpeedStdDev avg(TimeDelta) as ClickSpeedAvg by session_id | where count>5 AND (ClickSpeedStdDev<.5 OR ClickSpeedAvg<.5)"
"ESCU Searches","DA-ESS-ContentUpdate","Web Fraud - Password Sharing Across Accounts","This search is used to identify user accounts that share a common password.",,,threat,,,,,,,,,"search sourcetype=stream:http http_content_type=text* uri=/magento2/customer/account/loginPost*  | rex field=form_data ""login\[username\]=(?<Username>[^&|^$]+)"" | rex field=form_data ""login\[password\]=(?<Password>[^&|^$]+)"" | stats dc(Username) as UniqueUsernames values(Username) as user list(src_ip) as src_ip by Password|where UniqueUsernames>5"
"ESCU Searches","DA-ESS-ContentUpdate","Web Servers Executing Suspicious Processes","This search looks for suspicious processes on all systems labeled as web servers.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.dest_category=""web_server"" AND (Processes.process=""*whoami*"" OR Processes.process=""*ping*"" OR Processes.process=""*iptables*"" OR Processes.process=""*wget*"" OR Processes.process=""*service*"" OR Processes.process=""*curl*"") by Processes.process Processes.process_name, Processes.dest Processes.user| `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Windows Event Log Cleared","This search looks for Windows events that indicate one of the Windows event logs has been purged.",,,endpoint,,,,,,,,,"search ((eventtype=wineventlog_security) AND (signature_id=1102 OR signature_id=1100)) OR ((eventtype=wineventlog_system) AND signature_id=104) | stats count min(_time) as firstTime max(_time) as lastTime by signature_id dest user| `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`"
"ESCU Searches","DA-ESS-ContentUpdate","Windows hosts file modification","The search looks for modifications to the hosts file on all Windows endpoints across your environment.",Endpoint,,endpoint,,,,,,,,," tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem  by Filesystem.file_name Filesystem.file_path Filesystem.dest | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | search Filesystem.file_name=hosts AND Filesystem.file_path=*Windows\\System32\\* | `drop_dm_object_name(Filesystem)`"
